From 8119d1a71b1314697e18ffdbda47362d0be2acdb Mon Sep 17 00:00:00 2001
From: Yaniv Yithzak <yaniv.yitzhak@intel.com>
Date: Wed, 17 Jan 2018 11:43:28 +0200
Subject: [PATCH] Upgrade to curl 7.56

---
 package/network/utils/curl/Config.in               | 16 ++--
 package/network/utils/curl/Makefile                | 42 +++++-----
 .../utils/curl/patches/010-CVE-2015-3143.patch     | 28 -------
 .../utils/curl/patches/011-CVE-2015-3144.patch     | 32 --------
 .../utils/curl/patches/012-CVE-2015-3145.patch     | 53 ------------
 .../utils/curl/patches/013-CVE-2015-3148.patch     | 37 ---------
 .../utils/curl/patches/014-CVE-2015-3153.patch     | 95 ----------------------
 .../utils/curl/patches/015-CVE-2015-3236.patch     | 42 ----------
 .../utils/curl/patches/016-CVE-2015-3237.patch     | 35 --------
 .../utils/curl/patches/100-check_long_long.patch   | 10 ---
 .../curl/patches/100-fix-disable-crypto-auth.patch | 54 ++++++++++++
 .../utils/curl/patches/200-no_docs_tests.patch     | 31 +++----
 .../curl/patches/300-fix-disable-crypto-auth.patch | 25 ------
 ...310-mbedtls-disable-runtime-version-check.patch | 11 +++
 ...10-polarssl-disable-runtime-version-check.patch | 11 ---
 15 files changed, 106 insertions(+), 416 deletions(-)
 delete mode 100644 package/network/utils/curl/patches/010-CVE-2015-3143.patch
 delete mode 100644 package/network/utils/curl/patches/011-CVE-2015-3144.patch
 delete mode 100644 package/network/utils/curl/patches/012-CVE-2015-3145.patch
 delete mode 100644 package/network/utils/curl/patches/013-CVE-2015-3148.patch
 delete mode 100644 package/network/utils/curl/patches/014-CVE-2015-3153.patch
 delete mode 100644 package/network/utils/curl/patches/015-CVE-2015-3236.patch
 delete mode 100644 package/network/utils/curl/patches/016-CVE-2015-3237.patch
 delete mode 100644 package/network/utils/curl/patches/100-check_long_long.patch
 create mode 100644 package/network/utils/curl/patches/100-fix-disable-crypto-auth.patch
 delete mode 100644 package/network/utils/curl/patches/300-fix-disable-crypto-auth.patch
 create mode 100644 package/network/utils/curl/patches/310-mbedtls-disable-runtime-version-check.patch
 delete mode 100644 package/network/utils/curl/patches/310-polarssl-disable-runtime-version-check.patch

diff --git a/package/network/utils/curl/Config.in b/package/network/utils/curl/Config.in
index 11cfa39e95..4ef35ab251 100644
--- a/package/network/utils/curl/Config.in
+++ b/package/network/utils/curl/Config.in
@@ -4,17 +4,14 @@ comment "SSL support"
 
 choice
 	prompt "Selected SSL library"
-	default LIBCURL_POLARSSL
+	default LIBCURL_OPENSSL
 
-	config LIBCURL_POLARSSL
-		bool "PolarSSL"
+	config LIBCURL_MBEDTLS
+		bool "mbed TLS"
 
 	config LIBCURL_CYASSL
 		bool "CyaSSL"
 
-	config LIBCURL_AXTLS
-		bool "axTLS"
-
 	config LIBCURL_OPENSSL
 		bool "OpenSSL"
 
@@ -130,7 +127,7 @@ config LIBCURL_THREADED_RESOLVER
 
 config LIBCURL_ZLIB
 	bool "Enable zlib support"
-	default n
+	default y
 
 config LIBCURL_UNIX_SOCKETS
 	bool "Enable unix domain socket support"
@@ -151,4 +148,9 @@ config LIBCURL_VERBOSE
 	bool "Enable verbose error strings"
 	default n
 
+config LIBCURL_NTLM
+	bool "Enable NTLM support"
+	depends on LIBCURL_CRYPTO_AUTH && !LIBCURL_NOSSL
+	default n
+
 endif
diff --git a/package/network/utils/curl/Makefile b/package/network/utils/curl/Makefile
index 7f6d35575a..a30a5ad3d3 100644
--- a/package/network/utils/curl/Makefile
+++ b/package/network/utils/curl/Makefile
@@ -1,5 +1,5 @@
 #
-# Copyright (C) 2007-2015 OpenWrt.org
+# Copyright (C) 2007-2016 OpenWrt.org
 #
 # This is free software, licensed under the GNU General Public License v2.
 # See /LICENSE for more information.
@@ -8,17 +8,15 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=curl
-PKG_VERSION:=7.40.0
-PKG_RELEASE:=3
+PKG_VERSION:=7.56.0
+PKG_RELEASE:=1
 
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.bz2
-PKG_SOURCE_URL:=http://curl.haxx.se/download/ \
-	http://www.mirrorspace.org/curl/ \
-	ftp://ftp.sunet.se/pub/www/utilities/curl/ \
-	ftp://ftp.planetmirror.com/pub/curl/ \
-	http://www.mirrormonster.com/curl/download/ \
-	http://curl.mirrors.cyberservers.net/download/
-PKG_MD5SUM:=8d30594212e65657a5c32030f0998fa9
+PKG_SOURCE_URL:=https://dl.uxnr.de/mirror/curl/ \
+	http://curl.mirror.anstey.ca/ \
+	http://curl.askapache.com/download/ \
+	https://curl.haxx.se/download/
+PKG_MD5:=de60a4725a3d461c70aa571d7d69c788f1816d9d1a8a2ef05f864ce8f01279df
 
 PKG_LICENSE:=MIT
 PKG_LICENSE_FILES:=COPYING
@@ -29,11 +27,10 @@ PKG_BUILD_PARALLEL:=1
 PKG_CONFIG_DEPENDS:= \
   CONFIG_IPV6 \
   \
-  CONFIG_LIBCURL_AXTLS \
   CONFIG_LIBCURL_CYASSL \
   CONFIG_LIBCURL_GNUTLS \
   CONFIG_LIBCURL_OPENSSL \
-  CONFIG_LIBCURL_POLARSSL \
+  CONFIG_LIBCURL_MBEDTLS \
   CONFIG_LIBCURL_NOSSL \
   \
   CONFIG_LIBCURL_LIBIDN \
@@ -64,9 +61,11 @@ PKG_CONFIG_DEPENDS:= \
   CONFIG_LIBCURL_THREADED_RESOLVER \
   CONFIG_LIBCURL_TLS_SRP \
   CONFIG_LIBCURL_UNIX_SOCKETS \
-  CONFIG_LIBCURL_VERBOSE
+  CONFIG_LIBCURL_VERBOSE \
+  CONFIG_LIBCURL_NTLM
 
 include $(INCLUDE_DIR)/package.mk
+include $(INCLUDE_DIR)/host-build.mk
 
 define Package/curl/Default
   SECTION:=net
@@ -86,7 +85,7 @@ define Package/libcurl
   $(call Package/curl/Default)
   SECTION:=libs
   CATEGORY:=Libraries
-  DEPENDS:=+LIBCURL_POLARSSL:libpolarssl +LIBCURL_CYASSL:libcyassl +LIBCURL_AXTLS:libaxtls +LIBCURL_OPENSSL:libopenssl +LIBCURL_GNUTLS:libgnutls 
+  DEPENDS:= +LIBCURL_CYASSL:libcyassl +LIBCURL_OPENSSL:libopenssl +LIBCURL_GNUTLS:libgnutls +LIBCURL_MBEDTLS:libmbedtls
   DEPENDS += +LIBCURL_ZLIB:zlib +LIBCURL_THREADED_RESOLVER:libpthread +LIBCURL_LDAP:libopenldap +LIBCURL_LIBIDN:libidn +LIBCURL_SSH2:libssh2
   TITLE:=A client-side URL transfer library
   MENU:=1
@@ -97,7 +96,9 @@ define Package/libcurl/config
   source "$(SOURCE)/Config.in"
 endef
 
-TARGET_CFLAGS += $(FPIC)
+TARGET_CFLAGS += $(FPIC) -ffunction-sections -fdata-sections
+TARGET_CPPFLAGS += $(if $(CONFIG_LIBCURL_NTLM),,-DCURL_DISABLE_NTLM)
+TARGET_LDFLAGS += -Wl,--gc-sections
 
 CONFIGURE_ARGS += \
 	--disable-debug \
@@ -105,18 +106,16 @@ CONFIGURE_ARGS += \
 	--enable-shared \
 	--enable-static \
 	--disable-manual \
-	--without-ca-bundle \
 	--without-nss \
 	--without-libmetalink \
 	--without-librtmp \
 	\
 	$(call autoconf_bool,CONFIG_IPV6,ipv6) \
 	\
-	$(if $(CONFIG_LIBCURL_AXTLS),--with-axtls="$(STAGING_DIR)/usr" --without-ca-path,--without-axtls) \
-	$(if $(CONFIG_LIBCURL_CYASSL),--with-cyassl="$(STAGING_DIR)/usr" --without-ca-path,--without-cyassl) \
-	$(if $(CONFIG_LIBCURL_GNUTLS),--with-gnutls="$(STAGING_DIR)/usr" --without-ca-path,--without-gnutls) \
-	$(if $(CONFIG_LIBCURL_OPENSSL),--with-ssl="$(STAGING_DIR)/usr" --with-ca-path=/etc/ssl/certs,--without-ssl) \
-	$(if $(CONFIG_LIBCURL_POLARSSL),--with-polarssl="$(STAGING_DIR)/usr" --with-ca-path=/etc/ssl/certs,--without-polarssl) \
+	$(if $(CONFIG_LIBCURL_CYASSL),--with-cyassl="$(STAGING_DIR)/usr" --without-ca-path --with-ca-bundle=/etc/ssl/certs/ca-certificates.crt,--without-cyassl) \
+	$(if $(CONFIG_LIBCURL_GNUTLS),--with-gnutls="$(STAGING_DIR)/usr" --without-ca-bundle --with-ca-path=/etc/ssl/certs,--without-gnutls) \
+	$(if $(CONFIG_LIBCURL_OPENSSL),--with-ssl="$(STAGING_DIR)/usr" --without-ca-bundle --with-ca-path=/etc/ssl/certs,--without-ssl) \
+	$(if $(CONFIG_LIBCURL_MBEDTLS),--with-mbedtls="$(STAGING_DIR)/usr" --without-ca-path --with-ca-bundle=/etc/ssl/certs/ca-certificates.crt,--without-mbedtls) \
 	\
 	$(if $(CONFIG_LIBCURL_LIBIDN),--with-libidn="$(STAGING_DIR)/usr",--without-libidn) \
 	$(if $(CONFIG_LIBCURL_SSH2),--with-libssh2="$(STAGING_DIR)/usr",--without-libssh2) \
@@ -176,3 +175,4 @@ endef
 
 $(eval $(call BuildPackage,curl))
 $(eval $(call BuildPackage,libcurl))
+$(eval $(call HostBuild))
diff --git a/package/network/utils/curl/patches/010-CVE-2015-3143.patch b/package/network/utils/curl/patches/010-CVE-2015-3143.patch
deleted file mode 100644
index 697c9c9b6d..0000000000
--- a/package/network/utils/curl/patches/010-CVE-2015-3143.patch
+++ /dev/null
@@ -1,28 +0,0 @@
-From d7d1bc8f08eea1a85ab0d794bc1561659462d937 Mon Sep 17 00:00:00 2001
-From: Daniel Stenberg <daniel@haxx.se>
-Date: Thu, 16 Apr 2015 13:26:46 +0200
-Subject: [PATCH] ConnectionExists: for NTLM re-use, require credentials to
- match
-
-CVE-2015-3143
-
-Bug: http://curl.haxx.se/docs/adv_20150422A.html
-Reported-by: Paras Sethia
----
- lib/url.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
---- a/lib/url.c
-+++ b/lib/url.c
-@@ -3184,7 +3184,11 @@ ConnectionExists(struct SessionHandle *d
-       }
- 
-       if((!(needle->handler->flags & PROTOPT_CREDSPERREQUEST)) ||
-+#if defined(USE_NTLM)
-+         (wantNTLMhttp || check->ntlm.state != NTLMSTATE_NONE)) {
-+#else
-          wantNTLMhttp) {
-+#endif
-         /* This protocol requires credentials per connection or is HTTP+NTLM,
-            so verify that we're using the same name and password as well */
-         if(!strequal(needle->user, check->user) ||
diff --git a/package/network/utils/curl/patches/011-CVE-2015-3144.patch b/package/network/utils/curl/patches/011-CVE-2015-3144.patch
deleted file mode 100644
index 7da9489bfd..0000000000
--- a/package/network/utils/curl/patches/011-CVE-2015-3144.patch
+++ /dev/null
@@ -1,32 +0,0 @@
-From 6218ded6001ea330e589f92b6b2fa12777752b5d Mon Sep 17 00:00:00 2001
-From: Daniel Stenberg <daniel@haxx.se>
-Date: Thu, 16 Apr 2015 23:52:04 +0200
-Subject: [PATCH] fix_hostname: zero length host name caused -1 index offset
-MIME-Version: 1.0
-Content-Type: text/plain; charset=UTF-8
-Content-Transfer-Encoding: 8bit
-
-If a URL is given with a zero-length host name, like in "http://:80" or
-just ":80", `fix_hostname()` will index the host name pointer with a -1
-offset (as it blindly assumes a non-zero length) and both read and
-assign that address.
-
-CVE-2015-3144
-
-Bug: http://curl.haxx.se/docs/adv_20150422D.html
-Reported-by: Hanno BÃ¶ck
----
- lib/url.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
---- a/lib/url.c
-+++ b/lib/url.c
-@@ -3606,7 +3606,7 @@ static void fix_hostname(struct SessionH
-   host->dispname = host->name;
- 
-   len = strlen(host->name);
--  if(host->name[len-1] == '.')
-+  if(len && (host->name[len-1] == '.'))
-     /* strip off a single trailing dot if present, primarily for SNI but
-        there's no use for it */
-     host->name[len-1]=0;
diff --git a/package/network/utils/curl/patches/012-CVE-2015-3145.patch b/package/network/utils/curl/patches/012-CVE-2015-3145.patch
deleted file mode 100644
index c7ecbe9c20..0000000000
--- a/package/network/utils/curl/patches/012-CVE-2015-3145.patch
+++ /dev/null
@@ -1,53 +0,0 @@
-From ea595c516bc936a514753597aa6c59fd6eb0765e Mon Sep 17 00:00:00 2001
-From: Daniel Stenberg <daniel@haxx.se>
-Date: Thu, 16 Apr 2015 16:37:40 +0200
-Subject: [PATCH] cookie: cookie parser out of boundary memory access
-MIME-Version: 1.0
-Content-Type: text/plain; charset=UTF-8
-Content-Transfer-Encoding: 8bit
-
-The internal libcurl function called sanitize_cookie_path() that cleans
-up the path element as given to it from a remote site or when read from
-a file, did not properly validate the input. If given a path that
-consisted of a single double-quote, libcurl would index a newly
-allocated memory area with index -1 and assign a zero to it, thus
-destroying heap memory it wasn't supposed to.
-
-CVE-2015-3145
-
-Bug: http://curl.haxx.se/docs/adv_20150422C.html
-Reported-by: Hanno BÃ¶ck
----
- lib/cookie.c | 12 +++++++-----
- 1 file changed, 7 insertions(+), 5 deletions(-)
-
---- a/lib/cookie.c
-+++ b/lib/cookie.c
-@@ -236,11 +236,14 @@ static char *sanitize_cookie_path(const
-     return NULL;
- 
-   /* some stupid site sends path attribute with '"'. */
-+  len = strlen(new_path);
-   if(new_path[0] == '\"') {
--    memmove((void *)new_path, (const void *)(new_path + 1), strlen(new_path));
-+    memmove((void *)new_path, (const void *)(new_path + 1), len);
-+    len--;
-   }
--  if(new_path[strlen(new_path) - 1] == '\"') {
--    new_path[strlen(new_path) - 1] = 0x0;
-+  if(len && (new_path[len - 1] == '\"')) {
-+    new_path[len - 1] = 0x0;
-+    len--;
-   }
- 
-   /* RFC6265 5.2.4 The Path Attribute */
-@@ -252,8 +255,7 @@ static char *sanitize_cookie_path(const
-   }
- 
-   /* convert /hoge/ to /hoge */
--  len = strlen(new_path);
--  if(1 < len && new_path[len - 1] == '/') {
-+  if(len && new_path[len - 1] == '/') {
-     new_path[len - 1] = 0x0;
-   }
- 
diff --git a/package/network/utils/curl/patches/013-CVE-2015-3148.patch b/package/network/utils/curl/patches/013-CVE-2015-3148.patch
deleted file mode 100644
index ed52160a23..0000000000
--- a/package/network/utils/curl/patches/013-CVE-2015-3148.patch
+++ /dev/null
@@ -1,37 +0,0 @@
-From 6abfb512ed22c2de891a4398616d81a2a0690b5a Mon Sep 17 00:00:00 2001
-From: Daniel Stenberg <daniel@haxx.se>
-Date: Sat, 18 Apr 2015 23:50:16 +0200
-Subject: [PATCH] http_done: close Negotiate connections when done
-
-When doing HTTP requests Negotiate authenticated, the entire connnection
-may become authenticated and not just the specific HTTP request which is
-otherwise how HTTP works, as Negotiate can basically use NTLM under the
-hood. curl was not adhering to this fact but would assume that such
-requests would also be authenticated per request.
-
-CVE-2015-3148
-
-Bug: http://curl.haxx.se/docs/adv_20150422B.html
-Reported-by: Isaac Boukris
----
- lib/http.c | 8 +++++++-
- 1 file changed, 7 insertions(+), 1 deletion(-)
-
---- a/lib/http.c
-+++ b/lib/http.c
-@@ -1493,8 +1493,14 @@ CURLcode Curl_http_done(struct connectda
- 
- #ifdef USE_SPNEGO
-   if(data->state.proxyneg.state == GSS_AUTHSENT ||
--      data->state.negotiate.state == GSS_AUTHSENT)
-+      data->state.negotiate.state == GSS_AUTHSENT) {
-+    /* add forbid re-use if http-code != 401 as a WA
-+     * only needed for 401 that failed handling
-+     * otherwie state will be RECV with current code */
-+    if((data->req.httpcode != 401) && (data->req.httpcode != 407))
-+      connclose(conn, "Negotiate transfer completed");
-     Curl_cleanup_negotiate(data);
-+  }
- #endif
- 
-   /* set the proper values (possibly modified on POST) */
diff --git a/package/network/utils/curl/patches/014-CVE-2015-3153.patch b/package/network/utils/curl/patches/014-CVE-2015-3153.patch
deleted file mode 100644
index f6d37d4b54..0000000000
--- a/package/network/utils/curl/patches/014-CVE-2015-3153.patch
+++ /dev/null
@@ -1,95 +0,0 @@
-From 69a2e8d7ec581695a62527cb2252e7350f314ffa Mon Sep 17 00:00:00 2001
-From: Daniel Stenberg <daniel@haxx.se>
-Date: Thu, 23 Apr 2015 15:58:21 +0200
-Subject: [PATCH] CURLOPT_HEADEROPT: default to separate
-
-Make the HTTP headers separated by default for improved security and
-reduced risk for information leakage.
-
-Bug: http://curl.haxx.se/docs/adv_20150429.html
-Reported-by: Yehezkel Horowitz, Oren Souroujon
----
- docs/libcurl/opts/CURLOPT_HEADEROPT.3 | 12 ++++++------
- lib/url.c                             |  1 +
- tests/data/test1527                   |  2 +-
- tests/data/test287                    |  2 +-
- tests/libtest/lib1527.c               |  1 +
- 5 files changed, 10 insertions(+), 8 deletions(-)
-
---- a/docs/libcurl/opts/CURLOPT_HEADEROPT.3
-+++ b/docs/libcurl/opts/CURLOPT_HEADEROPT.3
-@@ -5,7 +5,7 @@
- .\" *                            | (__| |_| |  _ <| |___
- .\" *                             \___|\___/|_| \_\_____|
- .\" *
--.\" * Copyright (C) 1998 - 2014, Daniel Stenberg, <daniel@haxx.se>, et al.
-+.\" * Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.
- .\" *
- .\" * This software is licensed as described in the file COPYING, which
- .\" * you should have received as part of this distribution. The terms
-@@ -31,10 +31,10 @@ CURLcode curl_easy_setopt(CURL *handle,
- Pass a long that is a bitmask of options of how to deal with headers. The two
- mutually exclusive options are:
- 
--\fBCURLHEADER_UNIFIED\fP - keep working as before. This means
--\fICURLOPT_HTTPHEADER(3)\fP headers will be used in requests both to servers
--and proxies. With this option enabled, \fICURLOPT_PROXYHEADER(3)\fP will not
--have any effect.
-+\fBCURLHEADER_UNIFIED\fP - the headers specified in
-+\fICURLOPT_HTTPHEADER(3)\fP will be used in requests both to servers and
-+proxies. With this option enabled, \fICURLOPT_PROXYHEADER(3)\fP will not have
-+any effect.
- 
- \fBCURLHEADER_SEPARATE\fP - makes \fICURLOPT_HTTPHEADER(3)\fP headers only get
- sent to a server and not to a proxy. Proxy headers must be set with
-@@ -44,7 +44,7 @@ headers. When doing CONNECT, libcurl wil
- headers only to the proxy and then \fICURLOPT_HTTPHEADER(3)\fP headers only to
- the server.
- .SH DEFAULT
--CURLHEADER_UNIFIED
-+CURLHEADER_SEPARATE (changed in 7.42.1, ased CURLHEADER_UNIFIED before then)
- .SH PROTOCOLS
- HTTP
- .SH EXAMPLE
---- a/lib/url.c
-+++ b/lib/url.c
-@@ -605,6 +605,7 @@ CURLcode Curl_init_userdefined(struct Us
-   set->ssl_enable_alpn = TRUE;
- 
-   set->expect_100_timeout = 1000L; /* Wait for a second by default. */
-+  set->sep_headers = TRUE; /* separated header lists by default */
-   return result;
- }
- 
---- a/tests/data/test1527
-+++ b/tests/data/test1527
-@@ -45,7 +45,7 @@ http-proxy
- lib1527
- </tool>
-  <name>
--Check same headers are generated without CURLOPT_PROXYHEADER
-+Check same headers are generated with CURLOPT_HEADEROPT == CURLHEADER_UNIFIED
-  </name>
-  <command>
-  http://the.old.moo.1527:%HTTPPORT/1527 %HOSTIP:%PROXYPORT
---- a/tests/data/test287
-+++ b/tests/data/test287
-@@ -28,7 +28,7 @@ http
- HTTP proxy CONNECT with custom User-Agent header
-  </name>
-  <command>
--http://test.remote.example.com.287:%HTTPPORT/path/287 -H "User-Agent: looser/2007" --proxy http://%HOSTIP:%HTTPPORT --proxytunnel
-+http://test.remote.example.com.287:%HTTPPORT/path/287 -H "User-Agent: looser/2015" --proxy http://%HOSTIP:%HTTPPORT --proxytunnel --proxy-header "User-Agent: looser/2007"
- </command>
- </client>
- 
---- a/tests/libtest/lib1527.c
-+++ b/tests/libtest/lib1527.c
-@@ -83,6 +83,7 @@ int test(char *URL)
-   test_setopt(curl, CURLOPT_READFUNCTION, read_callback);
-   test_setopt(curl, CURLOPT_HTTPPROXYTUNNEL, 1L);
-   test_setopt(curl, CURLOPT_INFILESIZE, strlen(data));
-+  test_setopt(curl, CURLOPT_HEADEROPT, CURLHEADER_UNIFIED);
- 
-   res = curl_easy_perform(curl);
- 
diff --git a/package/network/utils/curl/patches/015-CVE-2015-3236.patch b/package/network/utils/curl/patches/015-CVE-2015-3236.patch
deleted file mode 100644
index 720fb94aa0..0000000000
--- a/package/network/utils/curl/patches/015-CVE-2015-3236.patch
+++ /dev/null
@@ -1,42 +0,0 @@
-From e6d7c30734487246e83b95520e81bc1ccf0a2376 Mon Sep 17 00:00:00 2001
-From: Kamil Dudka <kdudka@redhat.com>
-Date: Thu, 28 May 2015 20:04:35 +0200
-Subject: [PATCH] http: do not leak basic auth credentials on re-used
- connections
-
-CVE-2015-3236
-
-This partially reverts commit curl-7_39_0-237-g87c4abb
-
-Bug: http://curl.haxx.se/docs/adv_20150617A.html
----
- lib/http.c | 16 ++++------------
- 1 file changed, 4 insertions(+), 12 deletions(-)
-
---- a/lib/http.c
-+++ b/lib/http.c
-@@ -2333,20 +2333,12 @@ CURLcode Curl_http(struct connectdata *c
-                      te
-       );
- 
--  /*
--   * Free userpwd for Negotiate/NTLM. Cannot reuse as it is associated with
--   * the connection and shouldn't be repeated over it either.
--   */
--  switch (data->state.authhost.picked) {
--  case CURLAUTH_NEGOTIATE:
--  case CURLAUTH_NTLM:
--  case CURLAUTH_NTLM_WB:
--    Curl_safefree(conn->allocptr.userpwd);
--    break;
--  }
-+  /* clear userpwd to avoid re-using credentials from re-used connections */
-+  Curl_safefree(conn->allocptr.userpwd);
- 
-   /*
--   * Same for proxyuserpwd
-+   * Free proxyuserpwd for Negotiate/NTLM. Cannot reuse as it is associated
-+   * with the connection and shouldn't be repeated over it either.
-    */
-   switch (data->state.authproxy.picked) {
-   case CURLAUTH_NEGOTIATE:
diff --git a/package/network/utils/curl/patches/016-CVE-2015-3237.patch b/package/network/utils/curl/patches/016-CVE-2015-3237.patch
deleted file mode 100644
index 6942a04edb..0000000000
--- a/package/network/utils/curl/patches/016-CVE-2015-3237.patch
+++ /dev/null
@@ -1,35 +0,0 @@
-From d2f1a8bdce9d77a277d05adae025d369c1bdd9e6 Mon Sep 17 00:00:00 2001
-From: Daniel Stenberg <daniel@haxx.se>
-Date: Fri, 22 May 2015 10:28:21 +0200
-Subject: [PATCH] SMB: rangecheck values read off incoming packet
-
-CVE-2015-3237
-
-Detected by Coverity. CID 1299430.
-
-Bug: http://curl.haxx.se/docs/adv_20150617B.html
----
- lib/smb.c | 12 +++++++++---
- 1 file changed, 9 insertions(+), 3 deletions(-)
-
---- a/lib/smb.c
-+++ b/lib/smb.c
-@@ -783,9 +783,15 @@ static CURLcode smb_request_state(struct
-     off = Curl_read16_le(((unsigned char *) msg) +
-                          sizeof(struct smb_header) + 13);
-     if(len > 0) {
--      result = Curl_client_write(conn, CLIENTWRITE_BODY,
--                                 (char *)msg + off + sizeof(unsigned int),
--                                 len);
-+      struct smb_conn *smbc = &conn->proto.smbc;
-+      if(off + sizeof(unsigned int) + len > smbc->got) {
-+        failf(conn->data, "Invalid input packet");
-+        result = CURLE_RECV_ERROR;
-+      }
-+      else
-+        result = Curl_client_write(conn, CLIENTWRITE_BODY,
-+                                   (char *)msg + off + sizeof(unsigned int),
-+                                   len);
-       if(result) {
-         req->result = result;
-         next_state = SMB_CLOSE;
diff --git a/package/network/utils/curl/patches/100-check_long_long.patch b/package/network/utils/curl/patches/100-check_long_long.patch
deleted file mode 100644
index 2dd8cc72d8..0000000000
--- a/package/network/utils/curl/patches/100-check_long_long.patch
+++ /dev/null
@@ -1,10 +0,0 @@
---- a/configure.ac
-+++ b/configure.ac
-@@ -2885,6 +2885,7 @@ CURL_VERIFY_RUNTIMELIBS
- 
- AC_CHECK_SIZEOF(size_t)
- AC_CHECK_SIZEOF(long)
-+AC_CHECK_SIZEOF(long long)
- AC_CHECK_SIZEOF(int)
- AC_CHECK_SIZEOF(short)
- CURL_CONFIGURE_LONG
diff --git a/package/network/utils/curl/patches/100-fix-disable-crypto-auth.patch b/package/network/utils/curl/patches/100-fix-disable-crypto-auth.patch
new file mode 100644
index 0000000000..9bc74f36c4
--- /dev/null
+++ b/package/network/utils/curl/patches/100-fix-disable-crypto-auth.patch
@@ -0,0 +1,54 @@
+From f2699a18b5b395fe9acb615d2e82ff4a4c8ff00f Mon Sep 17 00:00:00 2001
+From: Daniel Stenberg <daniel@haxx.se>
+Date: Thu, 5 Oct 2017 00:20:34 +0200
+Subject: [PATCH] build: fix --disable-crypto-auth
+
+Reported-by: Wyatt O'Day
+Fixes #1945
+Closes #1947
+---
+ lib/urldata.h   |  2 +-
+ lib/vtls/vtls.c | 10 ++++++++++
+ 2 files changed, 11 insertions(+), 1 deletion(-)
+
+diff --git a/lib/urldata.h b/lib/urldata.h
+index 66e4596fdc..964999c1fc 100644
+--- a/lib/urldata.h
++++ b/lib/urldata.h
+@@ -1453,7 +1453,7 @@ enum dupstring {
+   STRING_PROXY_SERVICE_NAME, /* Proxy service name */
+ #endif
+ #if !defined(CURL_DISABLE_CRYPTO_AUTH) || defined(USE_KERBEROS5) || \
+-    defined(USE_SPNEGO)
++  defined(USE_SPNEGO) || defined(HAVE_GSSAPI)
+   STRING_SERVICE_NAME,    /* Service name */
+ #endif
+   STRING_MAIL_FROM,
+diff --git a/lib/vtls/vtls.c b/lib/vtls/vtls.c
+index bb8fda4196..f956525208 100644
+--- a/lib/vtls/vtls.c
++++ b/lib/vtls/vtls.c
+@@ -1059,6 +1059,7 @@ bool Curl_none_false_start(void)
+   return FALSE;
+ }
+ 
++#ifndef CURL_DISABLE_CRYPTO_AUTH
+ CURLcode Curl_none_md5sum(unsigned char *input, size_t inputlen,
+                           unsigned char *md5sum, size_t md5len UNUSED_PARAM)
+ {
+@@ -1073,6 +1074,15 @@ CURLcode Curl_none_md5sum(unsigned char *input, size_t inputlen,
+   Curl_MD5_final(MD5pw, md5sum);
+   return CURLE_OK;
+ }
++#else
++CURLcode Curl_none_md5sum(unsigned char *input UNUSED_PARAM,
++                          size_t inputlen UNUSED_PARAM,
++                          unsigned char *md5sum UNUSED_PARAM,
++                          size_t md5len UNUSED_PARAM)
++{
++  return CURLE_NOT_BUILT_IN;
++}
++#endif
+ 
+ static int Curl_multissl_init(void)
+ {
diff --git a/package/network/utils/curl/patches/200-no_docs_tests.patch b/package/network/utils/curl/patches/200-no_docs_tests.patch
index 2845577f1c..a982b9bcf9 100644
--- a/package/network/utils/curl/patches/200-no_docs_tests.patch
+++ b/package/network/utils/curl/patches/200-no_docs_tests.patch
@@ -1,22 +1,13 @@
 --- a/Makefile.am
 +++ b/Makefile.am
-@@ -129,7 +129,7 @@ CLEANFILES = $(VC6_LIBDSP) $(VC6_SRCDSP)
- bin_SCRIPTS = curl-config
- 
- SUBDIRS = lib src include
--DIST_SUBDIRS = $(SUBDIRS) tests packages docs
-+DIST_SUBDIRS = $(SUBDIRS) packages
- 
- pkgconfigdir = $(libdir)/pkgconfig
- pkgconfig_DATA = libcurl.pc
---- a/Makefile.in
-+++ b/Makefile.in
-@@ -577,7 +577,7 @@ CLEANFILES = $(VC6_LIBDSP) $(VC6_SRCDSP)
- 
- bin_SCRIPTS = curl-config
- SUBDIRS = lib src include
--DIST_SUBDIRS = $(SUBDIRS) tests packages docs
-+DIST_SUBDIRS = $(SUBDIRS) packages
- pkgconfigdir = $(libdir)/pkgconfig
- pkgconfig_DATA = libcurl.pc
- LIB_VTLS_CFILES = vtls/openssl.c vtls/gtls.c vtls/vtls.c vtls/nss.c     \
+@@ -278,8 +278,8 @@ cygwinbin:
+ # We extend the standard install with a custom hook:
+ install-data-hook:
+ 	cd include && $(MAKE) install
+-	cd docs && $(MAKE) install
+-	cd docs/libcurl && $(MAKE) install
++	#cd docs && $(MAKE) install
++	#cd docs/libcurl && $(MAKE) install
+
+ # We extend the standard uninstall with a custom hook:
+ uninstall-hook:
diff --git a/package/network/utils/curl/patches/300-fix-disable-crypto-auth.patch b/package/network/utils/curl/patches/300-fix-disable-crypto-auth.patch
deleted file mode 100644
index 3f88861e54..0000000000
--- a/package/network/utils/curl/patches/300-fix-disable-crypto-auth.patch
+++ /dev/null
@@ -1,25 +0,0 @@
---- a/lib/curl_ntlm_msgs.c
-+++ b/lib/curl_ntlm_msgs.c
-@@ -571,7 +571,7 @@ CURLcode Curl_sasl_create_ntlm_type3_mes
-   else
- #endif
- 
--#if USE_NTRESPONSES && USE_NTLM2SESSION
-+#if USE_NTRESPONSES && USE_NTLM2SESSION && !defined(CURL_DISABLE_CRYPTO_AUTH)
-   /* We don't support NTLM2 if we don't have USE_NTRESPONSES */
-   if(ntlm->flags & NTLMFLAG_NEGOTIATE_NTLM2_KEY) {
-     unsigned char ntbuffer[0x18];
---- a/lib/vtls/vtls.c
-+++ b/lib/vtls/vtls.c
-@@ -835,9 +835,9 @@ void Curl_ssl_md5sum(unsigned char *tmp,
-                      unsigned char *md5sum, /* output */
-                      size_t md5len)
- {
--#ifdef curlssl_md5sum
-+#if defined(curlssl_md5sum)
-   curlssl_md5sum(tmp, tmplen, md5sum, md5len);
--#else
-+#elif !defined(CURL_DISABLE_CRYPTO_AUTH)
-   MD5_context *MD5pw;
- 
-   (void) md5len;
diff --git a/package/network/utils/curl/patches/310-mbedtls-disable-runtime-version-check.patch b/package/network/utils/curl/patches/310-mbedtls-disable-runtime-version-check.patch
new file mode 100644
index 0000000000..ef9c4b8070
--- /dev/null
+++ b/package/network/utils/curl/patches/310-mbedtls-disable-runtime-version-check.patch
@@ -0,0 +1,11 @@
+--- a/lib/vtls/mbedtls.c
++++ b/lib/vtls/mbedtls.c
+@@ -796,7 +796,7 @@
+ 
+ size_t Curl_mbedtls_version(char *buffer, size_t size)
+ {
+-  unsigned int version = mbedtls_version_get_number();
++  unsigned int version = MBEDTLS_VERSION_NUMBER;
+   return snprintf(buffer, size, "mbedTLS/%d.%d.%d", version>>24,
+                   (version>>16)&0xff, (version>>8)&0xff);
+ }
diff --git a/package/network/utils/curl/patches/310-polarssl-disable-runtime-version-check.patch b/package/network/utils/curl/patches/310-polarssl-disable-runtime-version-check.patch
deleted file mode 100644
index d008227509..0000000000
--- a/package/network/utils/curl/patches/310-polarssl-disable-runtime-version-check.patch
+++ /dev/null
@@ -1,11 +0,0 @@
---- a/lib/vtls/polarssl.c
-+++ b/lib/vtls/polarssl.c
-@@ -591,7 +591,7 @@ void Curl_polarssl_session_free(void *pt
- 
- size_t Curl_polarssl_version(char *buffer, size_t size)
- {
--  unsigned int version = version_get_number();
-+  unsigned int version = POLARSSL_VERSION_NUMBER;
-   return snprintf(buffer, size, "PolarSSL/%d.%d.%d", version>>24,
-                   (version>>16)&0xff, (version>>8)&0xff);
- }
-- 
2.11.0

