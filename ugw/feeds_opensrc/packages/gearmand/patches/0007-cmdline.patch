--- a/libtest/cmdline.cc	2016-11-29 21:04:04.612340320 +0800
+++ b/libtest/cmdline.cc	2016-11-29 21:04:36.428340253 +0800
@@ -182,14 +182,14 @@
   _stderr_buffer.clear();
 
   posix_spawn_file_actions_t file_actions;
-  posix_spawn_file_actions_init(&file_actions);
+  //posix_spawn_file_actions_init(&file_actions);
 
   stdin_fd.dup_for_spawn(file_actions);
   stdout_fd.dup_for_spawn(file_actions);
   stderr_fd.dup_for_spawn(file_actions);
 
   posix_spawnattr_t spawnattr;
-  posix_spawnattr_init(&spawnattr);
+  //posix_spawnattr_init(&spawnattr);
 
   short flags= 0;
 
@@ -199,7 +199,7 @@
   sigset_t mask;
   sigemptyset(&mask);
 
-  fatal_assert(posix_spawnattr_setsigmask(&spawnattr, &mask) == 0);
+  //fatal_assert(posix_spawnattr_setsigmask(&spawnattr, &mask) == 0);
 
 #if defined(POSIX_SPAWN_USEVFORK) || defined(__linux__)
   // Use USEVFORK on linux
@@ -207,9 +207,9 @@
 #endif
 
   flags |= POSIX_SPAWN_SETPGROUP;
-  fatal_assert(posix_spawnattr_setpgroup(&spawnattr, 0) == 0);
+  //fatal_assert(posix_spawnattr_setpgroup(&spawnattr, 0) == 0);
 
-  fatal_assert(posix_spawnattr_setflags(&spawnattr, flags) == 0);
+  //fatal_assert(posix_spawnattr_setflags(&spawnattr, flags) == 0);
   
   create_argv(args);
 
@@ -248,7 +248,7 @@
         const_cast<char *>(_exectuble_with_path.c_str()), 
         0};
 
-      spawn_ret= posix_spawnp(&_pid, libtool(), &file_actions, &spawnattr, argv, environ);
+      //spawn_ret= posix_spawnp(&_pid, libtool(), &file_actions, &spawnattr, argv, environ);
     }
     else
     {
@@ -261,16 +261,16 @@
         const_cast<char *>(gdb_run_file.c_str()), 
         const_cast<char *>(_exectuble_with_path.c_str()), 
         0};
-      spawn_ret= posix_spawnp(&_pid, "gdb", &file_actions, &spawnattr, argv, environ);
+      //spawn_ret= posix_spawnp(&_pid, "gdb", &file_actions, &spawnattr, argv, environ);
     }
   }
   else
   {
-    spawn_ret= posix_spawn(&_pid, built_argv[0], &file_actions, &spawnattr, &built_argv[0], NULL);
+   // spawn_ret= posix_spawn(&_pid, built_argv[0], &file_actions, &spawnattr, &built_argv[0], NULL);
   }
 
-  posix_spawn_file_actions_destroy(&file_actions);
-  posix_spawnattr_destroy(&spawnattr);
+ // posix_spawn_file_actions_destroy(&file_actions);
+ // posix_spawnattr_destroy(&spawnattr);
 
   stdin_fd.close(Application::Pipe::READ);
   stdout_fd.close(Application::Pipe::WRITE);
@@ -736,7 +736,7 @@
   int type= STDIN_FILENO == _std_fd ? 0 : 1;
 
   int ret;
-  if ((ret= posix_spawn_file_actions_adddup2(&file_actions, _pipe_fd[type], _std_fd )) < 0)
+/*  if ((ret= posix_spawn_file_actions_adddup2(&file_actions, _pipe_fd[type], _std_fd )) < 0)
   {
     FATAL("posix_spawn_file_actions_adddup2(%s)", strerror(ret));
   }
@@ -744,7 +744,7 @@
   if ((ret= posix_spawn_file_actions_addclose(&file_actions, _pipe_fd[type])) < 0)
   {
     FATAL("posix_spawn_file_actions_addclose(%s)", strerror(ret));
-  }
+  }*/
 }
 
 void Application::Pipe::close(const close_t& arg)
