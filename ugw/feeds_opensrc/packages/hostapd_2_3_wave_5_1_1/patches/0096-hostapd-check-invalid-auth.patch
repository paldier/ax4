Binary files hostapd-2.6-orig/hostapd/hostapd_debug and hostapd-2.6/hostapd/hostapd_debug differ
diff -Npur hostapd-2.6-orig/src/ap/ieee802_11.c hostapd-2.6/src/ap/ieee802_11.c
--- hostapd-2.6-orig/src/ap/ieee802_11.c	2017-02-14 14:48:21.000000000 +0200
+++ hostapd-2.6/src/ap/ieee802_11.c	2017-02-14 15:21:50.000000000 +0200
@@ -1022,6 +1022,12 @@ static void handle_auth(struct hostapd_d
 	}
 #endif /* CONFIG_TESTING_OPTIONS */
 
+	if (!is_valid_ether_addr(mgmt->sa)) {
+		wpa_printf(MSG_INFO, "handle_auth - Invalid STA MAC address: " MACSTR,
+			   MAC2STR(mgmt->sa));
+		return;
+	}
+
 	auth_alg = le_to_host16(mgmt->u.auth.auth_alg);
 	auth_transaction = le_to_host16(mgmt->u.auth.auth_transaction);
 	status_code = le_to_host16(mgmt->u.auth.status_code);
diff -Npur hostapd-2.6-orig/src/utils/common.h hostapd-2.6/src/utils/common.h
--- hostapd-2.6-orig/src/utils/common.h	2017-02-14 14:48:21.000000000 +0200
+++ hostapd-2.6/src/utils/common.h	2017-02-14 15:17:08.000000000 +0200
@@ -511,6 +511,14 @@ static inline int is_multicast_ether_add
 	return a[0] & 0x01;
 }
 
+static inline int is_valid_ether_addr(const u8 *a)
+{
+/* FF:FF:FF:FF:FF:FF is a multicast address so we
+ * don't need to explicitly check for it here. */
+
+  return !is_multicast_ether_addr(a) && !is_zero_ether_addr(a);
+}
+
 #define broadcast_ether_addr (const u8 *) "\xff\xff\xff\xff\xff\xff"
 
 #include "wpa_debug.h"
