diff -Npur --exclude=.cproject --exclude=.project --exclude=.settings --exclude=hostapd_debug --exclude='*.orig' hostapd-2.6-orig/hostapd/config_file.c hostapd-2.6/hostapd/config_file.c
--- hostapd-2.6-orig/hostapd/config_file.c	2017-08-03 14:19:48.116013203 +0300
+++ hostapd-2.6/hostapd/config_file.c	2017-08-03 14:33:23.008892943 +0300
@@ -3302,6 +3302,8 @@ static int hostapd_config_fill(struct ho
 		}
 	} else if (os_strcmp(buf, "ignore_40_mhz_intolerant") == 0) {
 		conf->ignore_40_mhz_intolerant = atoi(pos);
+	} else if (os_strcmp(buf, "acs_scan_mode") == 0) {
+		conf->acs_scan_mode = atoi(pos);
 #endif /* CONFIG_IEEE80211N */
 #ifdef CONFIG_IEEE80211AC
 	} else if (os_strcmp(buf, "ieee80211ac") == 0) {
diff -Npur --exclude=.cproject --exclude=.project --exclude=.settings --exclude=hostapd_debug --exclude='*.orig' hostapd-2.6-orig/hostapd/ctrl_iface.c hostapd-2.6/hostapd/ctrl_iface.c
--- hostapd-2.6-orig/hostapd/ctrl_iface.c	2017-08-03 14:19:48.115013223 +0300
+++ hostapd-2.6/hostapd/ctrl_iface.c	2017-08-04 11:48:33.512873272 +0300
@@ -5232,6 +5232,17 @@ int hostapd_ctrl_iface_get_vap_measureme
   return len;
 }
 
+int hostapd_ctrl_iface_get_radio_state (enum hostapd_iface_state state)
+{
+	switch (state) {
+	case HAPD_IFACE_ENABLED:
+		return 1;
+	case HAPD_IFACE_ACS_DONE:
+		return 2;
+	default:
+		return 0;
+	}
+}
 
 int hostapd_ctrl_iface_get_radio_info(struct hostapd_data *hapd,
   const char *cmd, char *buf, size_t buflen)
@@ -5254,7 +5265,7 @@ int hostapd_ctrl_iface_get_radio_info(st
     return len;
   len += ret;
   ret = os_snprintf(buf + len, buflen - len, "HostapdEnabled=%d\n",
-      (state == HAPD_IFACE_ENABLED) ? 1 : 0);
+      hostapd_ctrl_iface_get_radio_state(state));
   if (ret >= buflen - len || ret < 0)
     return len;
   len += ret;
diff -Npur --exclude=.cproject --exclude=.project --exclude=.settings --exclude=hostapd_debug --exclude='*.orig' hostapd-2.6-orig/src/ap/ap_config.h hostapd-2.6/src/ap/ap_config.h
--- hostapd-2.6-orig/src/ap/ap_config.h	2017-08-03 14:19:48.124013045 +0300
+++ hostapd-2.6/src/ap/ap_config.h	2017-08-04 11:48:56.275926482 +0300
@@ -710,6 +710,7 @@ struct hostapd_config {
 	u16 scan_activity_threshold;
 	int obss_beacon_rssi_threshold;
 	int ignore_40_mhz_intolerant;
+	int acs_scan_mode;
 	u32 vht_capab;
 	int ieee80211ac;
 	int require_vht;
diff -Npur --exclude=.cproject --exclude=.project --exclude=.settings --exclude=hostapd_debug --exclude='*.orig' hostapd-2.6-orig/src/ap/hostapd.c hostapd-2.6/src/ap/hostapd.c
--- hostapd-2.6-orig/src/ap/hostapd.c	2017-08-03 14:19:48.124013045 +0300
+++ hostapd-2.6/src/ap/hostapd.c	2017-08-03 18:00:26.626124349 +0300
@@ -3018,6 +3018,8 @@ const char * hostapd_state_text(enum hos
 		return "COUNTRY_UPDATE";
 	case HAPD_IFACE_ACS:
 		return "ACS";
+	case HAPD_IFACE_ACS_DONE:
+		return "ACS_DONE";
 	case HAPD_IFACE_HT_SCAN:
 		return "HT_SCAN";
 	case HAPD_IFACE_DFS:
diff -Npur --exclude=.cproject --exclude=.project --exclude=.settings --exclude=hostapd_debug --exclude='*.orig' hostapd-2.6-orig/src/ap/hostapd.h hostapd-2.6/src/ap/hostapd.h
--- hostapd-2.6-orig/src/ap/hostapd.h	2017-08-03 14:19:48.123013065 +0300
+++ hostapd-2.6/src/ap/hostapd.h	2017-08-03 17:59:36.959237152 +0300
@@ -342,6 +342,7 @@ struct hostapd_iface {
 		HAPD_IFACE_DISABLED,
 		HAPD_IFACE_COUNTRY_UPDATE,
 		HAPD_IFACE_ACS,
+		HAPD_IFACE_ACS_DONE,
 		HAPD_IFACE_HT_SCAN,
 		HAPD_IFACE_DFS,
 		HAPD_IFACE_ENABLED
diff -Npur --exclude=.cproject --exclude=.project --exclude=.settings --exclude=hostapd_debug --exclude='*.orig' hostapd-2.6-orig/src/ap/hw_features.c hostapd-2.6/src/ap/hw_features.c
--- hostapd-2.6-orig/src/ap/hw_features.c	2017-08-03 14:19:48.123013065 +0300
+++ hostapd-2.6/src/ap/hw_features.c	2017-08-03 18:01:32.061891641 +0300
@@ -1222,16 +1222,23 @@ int hostapd_acs_completed(struct hostapd
 			dfs_channel = 1;
 
 #ifdef CONFIG_ACS
-		wpa_msg(iface->bss[0]->msg_ctx, MSG_INFO,
-				ACS_EVENT_COMPLETED "freq=%d channel=%d"
-				" OperatingChannelBandwidt=%d ExtensionChannel=%d cf1=%d cf2=%d"
-				" dfs_chan=%d",
-				freq, iface->conf->channel,
-				get_num_width(iface->conf->vht_oper_chwidth, iface->conf->secondary_channel),
-				iface->conf->secondary_channel,
-				acs_chan_to_freq(iface->conf->vht_oper_centr_freq_seg0_idx),
-				acs_chan_to_freq(iface->conf->vht_oper_centr_freq_seg1_idx),
-				dfs_channel);
+	if (!iface->conf->acs_scan_mode) {
+			wpa_msg(iface->bss[0]->msg_ctx, MSG_INFO,
+					ACS_EVENT_COMPLETED "freq=%d channel=%d"
+					" OperatingChannelBandwidt=%d ExtensionChannel=%d cf1=%d cf2=%d"
+					" reason=%s dfs_chan=%d",
+					freq, iface->conf->channel,
+					get_num_width(iface->conf->vht_oper_chwidth, iface->conf->secondary_channel),
+					iface->conf->secondary_channel,
+					acs_chan_to_freq(iface->conf->vht_oper_centr_freq_seg0_idx),
+					acs_chan_to_freq(iface->conf->vht_oper_centr_freq_seg1_idx),
+					hostapd_channel_switch_text(HAPD_CHAN_SWITCH_OTHER),
+					dfs_channel);
+	}
+	else {
+			hostapd_set_state(iface, HAPD_IFACE_ACS_DONE);
+			wpa_msg(iface->bss[0]->msg_ctx, MSG_INFO, ACS_EVENT_COMPLETED "SCAN");
+	}
 #endif /* CONFIG_ACS */
 		break;
 	case HOSTAPD_CHAN_ACS:
@@ -1247,6 +1254,12 @@ int hostapd_acs_completed(struct hostapd
 		goto out;
 	}
 
+	/* After scan and ACS don't set the channel */
+	if (iface->conf->acs_scan_mode) {
+		iface->conf->acs_scan_mode = 0;
+		return 0;
+	}
+
 	ret = hostapd_check_ht_capab(iface);
 	if (ret < 0)
 		goto out;
