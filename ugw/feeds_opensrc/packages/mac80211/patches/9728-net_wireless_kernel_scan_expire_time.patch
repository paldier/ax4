diff -Npur compat-wireless-2016-05-12-modifi/net/wireless/core.c compat-wireless-2016-05-12-modific/net/wireless/core.c
--- compat-wireless-2016-05-12-modifi/net/wireless/core.c	2016-10-18 13:31:31.000000000 +0300
+++ compat-wireless-2016-05-12-modific/net/wireless/core.c	2016-10-18 13:38:00.000000000 +0300
@@ -484,6 +484,8 @@ use_default_name:
 	rdev->wiphy.max_sched_scan_plans = 1;
 	rdev->wiphy.max_sched_scan_plan_interval = U32_MAX;
 
+	rdev->scan_expire_time = IEEE80211_SCAN_RESULT_EXPIRE;
+
 	return &rdev->wiphy;
 }
 EXPORT_SYMBOL(wiphy_new_nm);
diff -Npur compat-wireless-2016-05-12-modifi/net/wireless/core.h compat-wireless-2016-05-12-modific/net/wireless/core.h
--- compat-wireless-2016-05-12-modifi/net/wireless/core.h	2016-10-18 13:30:33.000000000 +0300
+++ compat-wireless-2016-05-12-modific/net/wireless/core.h	2016-10-18 13:39:05.000000000 +0300
@@ -18,6 +18,7 @@
 
 
 #define WIPHY_IDX_INVALID	-1
+#define IEEE80211_SCAN_RESULT_EXPIRE	(30 * HZ)
 
 struct cfg80211_registered_device {
 	const struct cfg80211_ops *ops;
@@ -74,6 +75,7 @@ struct cfg80211_registered_device {
 	struct cfg80211_scan_request *scan_req; /* protected by RTNL */
 	struct sk_buff *scan_msg;
 	struct cfg80211_sched_scan_request __rcu *sched_scan_req;
+	u32 scan_expire_time;
 	unsigned long suspend_at;
 	struct work_struct scan_done_wk;
 	struct work_struct sched_scan_results_wk;
diff -Npur compat-wireless-2016-05-12-modifi/net/wireless/scan.c compat-wireless-2016-05-12-modific/net/wireless/scan.c
--- compat-wireless-2016-05-12-modifi/net/wireless/scan.c	2016-10-18 13:30:33.000000000 +0300
+++ compat-wireless-2016-05-12-modific/net/wireless/scan.c	2016-10-18 13:42:22.000000000 +0300
@@ -56,8 +56,6 @@
  * also linked into the probe response struct.
  */
 
-#define IEEE80211_SCAN_RESULT_EXPIRE	(30 * HZ)
-
 static void bss_free(struct cfg80211_internal_bss *bss)
 {
 	struct cfg80211_bss_ies *ies;
@@ -347,7 +345,7 @@ void cfg80211_bss_age(struct cfg80211_re
 
 void cfg80211_bss_expire(struct cfg80211_registered_device *rdev)
 {
-	__cfg80211_bss_expire(rdev, jiffies - IEEE80211_SCAN_RESULT_EXPIRE);
+	__cfg80211_bss_expire(rdev, jiffies - rdev->scan_expire_time);
 }
 
 const u8 *cfg80211_find_ie(u8 eid, const u8 *ies, int len)
@@ -612,7 +610,7 @@ struct cfg80211_bss *cfg80211_get_bss(st
 		if (!is_valid_ether_addr(bss->pub.bssid))
 			continue;
 		/* Don't get expired BSS structs */
-		if (time_after(now, bss->ts + IEEE80211_SCAN_RESULT_EXPIRE) &&
+		if (time_after(now, bss->ts + rdev->scan_expire_time) &&
 		    !atomic_read(&bss->hold))
 			continue;
 		if (is_bss(&bss->pub, bssid, ssid, ssid_len)) {
@@ -1160,6 +1158,22 @@ void cfg80211_unlink_bss(struct wiphy *w
 }
 EXPORT_SYMBOL(cfg80211_unlink_bss);
 
+void cfg80211_set_scan_expire_time(struct wiphy *wiphy, unsigned long time)
+{
+	struct cfg80211_registered_device *dev = wiphy_to_rdev(wiphy);
+
+	dev->scan_expire_time = time;
+}
+EXPORT_SYMBOL(cfg80211_set_scan_expire_time);
+
+u32 cfg80211_get_scan_expire_time(struct wiphy *wiphy)
+{
+	struct cfg80211_registered_device *dev = wiphy_to_rdev(wiphy);
+
+	return dev->scan_expire_time;
+}
+EXPORT_SYMBOL(cfg80211_get_scan_expire_time);
+
 #ifdef CPTCFG_CFG80211_WEXT
 static struct cfg80211_registered_device *
 cfg80211_get_dev_from_ifindex(struct net *net, int ifindex)
