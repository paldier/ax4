From dbca9afd444afa33762ef690b088eeee6ba0e905 Mon Sep 17 00:00:00 2001
From: grishche <a.grishchenko@intel.com>
Date: Tue, 6 Jun 2017 14:54:02 +0300
Subject: [PATCH 9733/9740] mac80211-allow-to-start-sw-scan-from-driver

---
 include/net/mac80211.h |  9 +++++++++
 net/mac80211/scan.c    | 11 +++++++++++
 2 files changed, 20 insertions(+)

diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index b4b2a3d..42b240c 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -4440,4 +4440,13 @@ void ieee80211_report_wowlan_wakeup(struct ieee80211_vif *vif,
 				    struct cfg80211_wowlan_wakeup *wakeup,
 				    gfp_t gfp);
 
+/**
+ * ieee80211_drv_start_sw_scan - allow driver to fallback to sw scan from hw
+ * @hw: pointer as obtained from ieee80211_alloc_hw()
+ *
+ * Note: This function must be called from hw_scan callback only.
+ *
+ */
+void ieee80211_drv_start_sw_scan(struct ieee80211_hw *hw);
+
 #endif /* MAC80211_H */
diff --git a/net/mac80211/scan.c b/net/mac80211/scan.c
index eb03337..a30049d 100644
--- a/net/mac80211/scan.c
+++ b/net/mac80211/scan.c
@@ -347,6 +347,17 @@ static int ieee80211_start_sw_scan(struct ieee80211_local *local)
 	return 0;
 }
 
+void ieee80211_drv_start_sw_scan(struct ieee80211_hw *hw)
+{
+	struct ieee80211_local *local = hw_to_local(hw);
+	test_and_clear_bit(SCAN_HW_SCANNING, &local->scanning);
+	__set_bit(SCAN_SW_SCANNING, &local->scanning);
+	/* TODO: check remain on channel (scan for current channel requested) */
+
+	ieee80211_start_sw_scan(local);
+}
+EXPORT_SYMBOL(ieee80211_drv_start_sw_scan);
+
 static bool ieee80211_can_scan(struct ieee80211_local *local,
 			       struct ieee80211_sub_if_data *sdata)
 {
-- 
2.10.1

