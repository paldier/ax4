# HG changeset patch
# Parent 34ac0f6d1861f08f119bfe04f6f54b292eff58e3
diff --git a/drivers/pinctrl/pinctrl-xway.c b/drivers/pinctrl/pinctrl-xway.c
--- a/drivers/pinctrl/pinctrl-xway.c
+++ b/drivers/pinctrl/pinctrl-xway.c
@@ -88,6 +88,7 @@
 #define XWAY_MAX_PIN		32
 #define XR9_MAX_PIN		56
 #define XR10_MAX_PIN	62
+#define XRX3XX_MAX_PIN	 62
 
 enum xway_mux {
 	XWAY_MUX_GPIO = 0,
@@ -109,6 +110,13 @@ enum xway_mux {
 	XWAY_MUX_EPHY,
 	XWAY_MUX_DFE,
 	XWAY_MUX_SDIO,
+	XWAY_MUX_GPHY,
+	XWAY_MUX_WLAN,
+	XWAY_MUX_MCD,
+	XWAY_MUX_SSI0,
+	XWAY_MUX_LED,
+	XWAY_MUX_DSP,
+	XWAY_MUX_ARC,
 	XWAY_MUX_NONE = 0xffff,
 };
 
@@ -179,6 +187,70 @@ static const struct ltq_mfp_pin xway_mfp
 
 };
 
+static const struct ltq_mfp_pin xrx3xx_mfp[] = {
+        MFP_XWAY(GPIO0, GPIO,   EXIN,   EPHY,   NONE),
+        MFP_XWAY(GPIO1, GPIO,   NONE,   EXIN,   NONE),
+        MFP_XWAY(GPIO2, NONE,   NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO3, GPIO,   CGU,    NONE,   NONE),
+        MFP_XWAY(GPIO4, GPIO,   STP,	DSP,    NONE),
+        MFP_XWAY(GPIO5, GPIO,   STP,    EPHY,   NONE),
+        MFP_XWAY(GPIO6, GPIO,   STP,    NONE,   ARC),
+        MFP_XWAY(GPIO7, NONE,   NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO8, GPIO,   CGU,    GPHY,   EPHY),
+        MFP_XWAY(GPIO9, GPIO,   WLAN,   NONE,   EXIN),
+        MFP_XWAY(GPIO10, GPIO,  USIF,   SPI,    EXIN),
+        MFP_XWAY(GPIO11, GPIO,  USIF,   WLAN,    SPI),
+        MFP_XWAY(GPIO12, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO13, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO14, GPIO,  CGU,    USIF,   EPHY),
+        MFP_XWAY(GPIO15, GPIO,  SPI,    NONE,   MCD),
+        MFP_XWAY(GPIO16, GPIO,  SPI,    EXIN,   NONE),
+        MFP_XWAY(GPIO17, GPIO,  SPI,    NONE,   NONE),
+        MFP_XWAY(GPIO18, GPIO,  SPI,    NONE,   NONE),
+        MFP_XWAY(GPIO19, GPIO,  USIF,   NONE,   EPHY),
+        MFP_XWAY(GPIO20, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO21, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO22, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO23, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO24, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO25, GPIO,  TDM,    NONE,   NONE),
+        MFP_XWAY(GPIO26, GPIO,  NONE,   TDM,    NONE),
+        MFP_XWAY(GPIO27, GPIO,  TDM,    NONE,   NONE),
+        MFP_XWAY(GPIO28, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO29, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO30, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO31, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO32, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO33, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO34, GPIO,  NONE,   SSI0,   NONE),
+        MFP_XWAY(GPIO35, GPIO,  NONE,   SSI0,   NONE),
+        MFP_XWAY(GPIO36, GPIO,  NONE,   SSI0,   NONE),
+        MFP_XWAY(GPIO37, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO38, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO39, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO40, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO41, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO42, GPIO,  MDIO,   NONE,   NONE),
+        MFP_XWAY(GPIO43, GPIO,  MDIO,   NONE,   NONE),
+        MFP_XWAY(GPIO44, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO45, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO46, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO47, NONE,  NONE,   NONE,   NONE),
+        MFP_XWAY(GPIO48, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO49, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO50, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO51, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO52, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO53, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO54, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO55, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO56, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO57, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO58, GPIO,  EBU,    TDM,    NONE),
+        MFP_XWAY(GPIO59, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO60, GPIO,  EBU,    NONE,   NONE),
+        MFP_XWAY(GPIO61, GPIO,  EBU,    NONE,   NONE),
+};
 static const struct ltq_mfp_pin ase_mfp[] = {
 	/*       pin    f0	f1	f2	f3   */
 	MFP_XWAY(GPIO0, GPIO,	EXIN,	MII,	TDM),
@@ -214,6 +286,50 @@ static const struct ltq_mfp_pin ase_mfp[
 	MFP_XWAY(GPIO30, GPIO,	NONE,	NONE,	NONE),
 	MFP_XWAY(GPIO31, GPIO,	NONE,	NONE,	NONE),
 };
+static const unsigned xrx3xx_pins_stp[] = {GPIO4, GPIO5, GPIO6};
+static const unsigned xrx3xx_pins_mdio[] = {GPIO42, GPIO43};
+static const unsigned xrx3xx_pins_nand_ale[] = {GPIO13};
+static const unsigned xrx3xx_pins_nand_cs1[] = {GPIO23};
+static const unsigned xrx3xx_pins_nand_cle[] = {GPIO24};
+static const unsigned xrx3xx_pins_nand_rdy[] = {GPIO48};
+static const unsigned xrx3xx_pins_nand_rd[] = {GPIO49};
+static const unsigned xrx3xx_pins_nand_d1[] = {GPIO50};
+static const unsigned xrx3xx_pins_nand_d0[] = {GPIO51};
+static const unsigned xrx3xx_pins_nand_d2p1[] = {GPIO52};
+static const unsigned xrx3xx_pins_nand_d2p2[] = {GPIO53};
+static const unsigned xrx3xx_pins_nand_d6 [] = {GPIO54};
+static const unsigned xrx3xx_pins_nand_d5p1 [] = {GPIO55};
+static const unsigned xrx3xx_pins_nand_d5p2 [] = {GPIO56};
+static const unsigned xrx3xx_pins_nand_d3 [] = {GPIO57};
+static const unsigned xrx3xx_pins_nand_cs0 [] = {GPIO58};
+static const unsigned xrx3xx_pins_nand_wr [] = {GPIO59};
+static const unsigned xrx3xx_pins_nand_wp [] = {GPIO60};
+static const unsigned xrx3xx_pins_nand_se [] = {GPIO61};
+static const unsigned xrx3xx_pins_exin0[] = {GPIO0};
+static const unsigned xrx3xx_pins_exin1[] = {GPIO1};
+static const unsigned xrx3xx_pins_exin2[] = {GPIO16};
+static const unsigned xrx3xx_pins_exin4[] = {GPIO10};
+static const unsigned xrx3xx_pins_exin5[] = {GPIO9};
+static const unsigned xrx3xx_pins_spi[] = {GPIO16, GPIO17, GPIO18};
+static const unsigned xrx3xx_pins_spi_cs1[] = {GPIO15};
+static const unsigned xrx3xx_pins_spi_cs4[] = {GPIO10};
+static const unsigned xrx3xx_pins_spi_cs6[] = {GPIO11};
+static const unsigned xrx3xx_pins_usif[] = {GPIO10, GPIO11, GPIO14, GPIO19};
+static const unsigned xrx3xx_pins_clkout0[] = {GPIO3};
+static const unsigned xrx3xx_pins_clkout1[] = {GPIO8};
+static const unsigned xrx3xx_pins_clkout2[] = {GPIO14};
+static const unsigned xrx3xx_pins_ephy_ready[] = {GPIO0};
+static const unsigned xrx3xx_pins_ephy0_led0[] = {GPIO5};
+static const unsigned xrx3xx_pins_ephy0_led1[] = {GPIO8};
+static const unsigned xrx3xx_pins_ephy1_led0[] = {GPIO14};
+static const unsigned xrx3xx_pins_ephy1_led1[] = {GPIO19};
+static const unsigned xrx3xx_pins_gphy[] = {GPIO8};
+static const unsigned xrx3xx_pins_wlan[] = {GPIO9, GPIO11};
+static const unsigned xrx3xx_pins_mcd[] = {GPIO15};
+static const unsigned xrx3xx_pins_tdm[] = {GPIO25, GPIO26, GPIO27, GPIO58};
+static const unsigned xrx3xx_pins_ssi0[] = {GPIO34, GPIO35, GPIO36};
+static const unsigned xrx3xx_pins_dsp[] = {GPIO4};
+static const unsigned xrx3xx_pins_arc[] = {GPIO5};
 
 static const unsigned pins_jtag[] = {GPIO15, GPIO16, GPIO17, GPIO19, GPIO35};
 static const unsigned pins_asc0[] = {GPIO11, GPIO12};
@@ -370,6 +486,52 @@ static const struct ltq_pin_group xway_g
 	GRP_MUX("arc_jtag", GPIO, pins_arc_jtag),
 	GRP_MUX("led", GPIO, pins_led),
 };
+static const struct ltq_pin_group xrx3xx_grps[] = {
+	GRP_MUX("exin0", EXIN, xrx3xx_pins_exin0),
+	GRP_MUX("exin1", EXIN, xrx3xx_pins_exin1),
+	GRP_MUX("exin2", EXIN, xrx3xx_pins_exin2),
+	GRP_MUX("exin4", EXIN, xrx3xx_pins_exin4),
+	GRP_MUX("exin5", EXIN, xrx3xx_pins_exin5),
+	GRP_MUX("stp", STP, xrx3xx_pins_stp),
+	GRP_MUX("mdio", MDIO, xrx3xx_pins_mdio),
+	GRP_MUX("nand ale", EBU, xrx3xx_pins_nand_ale),
+	GRP_MUX("nand cs1", EBU, xrx3xx_pins_nand_cs1),
+	GRP_MUX("nand cle", EBU, xrx3xx_pins_nand_cle),
+	GRP_MUX("nand rdy", EBU, xrx3xx_pins_nand_rdy),
+    GRP_MUX("nand d1", EBU, xrx3xx_pins_nand_d1),
+	GRP_MUX("nand d0", EBU, xrx3xx_pins_nand_d0),
+	GRP_MUX("nand d2p1", EBU, xrx3xx_pins_nand_d2p1),
+	GRP_MUX("nand d2p2", EBU, xrx3xx_pins_nand_d2p2),
+	GRP_MUX("nand d6", EBU, xrx3xx_pins_nand_d6),
+	GRP_MUX("nand d5p1", EBU, xrx3xx_pins_nand_d5p1),
+	GRP_MUX("nand d5p2", EBU, xrx3xx_pins_nand_d5p2),
+	GRP_MUX("nand d3", EBU, xrx3xx_pins_nand_d3),
+	GRP_MUX("nand cs0", EBU, xrx3xx_pins_nand_cs0),
+	GRP_MUX("nand wr", EBU, xrx3xx_pins_nand_wr),
+	GRP_MUX("nand wp", EBU, xrx3xx_pins_nand_wp),
+	GRP_MUX("nand rd", EBU, xrx3xx_pins_nand_rd),
+	GRP_MUX("nand se", EBU, xrx3xx_pins_nand_se),
+	GRP_MUX("spi", SPI, xrx3xx_pins_spi),
+	GRP_MUX("spi_cs1", SPI, xrx3xx_pins_spi_cs1),
+	GRP_MUX("spi_cs4", SPI, xrx3xx_pins_spi_cs4),
+	GRP_MUX("spi_cs6", SPI, xrx3xx_pins_spi_cs6),
+	GRP_MUX("usif", USIF, xrx3xx_pins_usif),
+	GRP_MUX("clkout0", CGU, xrx3xx_pins_clkout0),
+	GRP_MUX("clkout1", CGU, xrx3xx_pins_clkout1),
+	GRP_MUX("clkout2", CGU, xrx3xx_pins_clkout2),
+	GRP_MUX("ephy_ready", EPHY, xrx3xx_pins_ephy_ready),
+	GRP_MUX("ephy0_led0", EPHY, xrx3xx_pins_ephy0_led0),
+	GRP_MUX("ephy0_led1", EPHY, xrx3xx_pins_ephy0_led1),
+	GRP_MUX("ephy1_led0", EPHY, xrx3xx_pins_ephy1_led0),
+	GRP_MUX("ephy1_led1", EPHY, xrx3xx_pins_ephy1_led1),
+	GRP_MUX("gphy", GPHY, xrx3xx_pins_gphy),
+	GRP_MUX("wlan", WLAN, xrx3xx_pins_wlan),
+	GRP_MUX("mcd", MCD, xrx3xx_pins_mcd),
+	GRP_MUX("tdm", TDM, xrx3xx_pins_tdm),
+	GRP_MUX("ssi0", SSI0, xrx3xx_pins_ssi0),
+	GRP_MUX("dsp", SSI0, xrx3xx_pins_dsp),
+	GRP_MUX("arc", SSI0, xrx3xx_pins_arc),
+};
 
 static const struct ltq_pin_group ase_grps[] = {
 	GRP_MUX("exin0", EXIN, ase_pins_exin0),
@@ -435,6 +597,36 @@ static const char * const xrx_pci_grps[]
 						"req3", "req4"};
 static const char * const xrx_arc_jtag_grps[] = {"arc_jtag"};
 
+static const char * const xrx3xx_spi_grps[] = {"spi", "spi_cs1",
+						"spi_cs4",
+						"spi_cs6"};
+static const char * const xrx3xx_usif_grps[] = {"usif"};
+static const char * const xrx3xx_cgu_grps[] = {"clkout0", "clkout1",
+						"clkout2"};
+static const char * const xrx3xx_exin_grps[] = {"exin0", "exin1", "exin2",
+							"exin4", "exin5"};
+static const char * const xrx3xx_stp_grps[] = {"stp"};
+static const char * const xrx3xx_mdio_grps[] = {"mdio"};
+static const char * const xrx3xx_ebu_grps[] = { 
+						"nand ale", "nand cs1",
+						"nand cle", "nand rdy",
+						"nand rd",	"nand d1",
+						"nand d0", "nand d2p1",
+						"nand d2p2", "nand d6",
+						"nand d5p1", "nand d5p2",
+						"nand d3", "nand cs0",
+						"nand wr",	"nand wp",
+						"nand se"};
+static const char * const xrx3xx_ephy_grps[] = {"ephy_ready",
+						"ephy0_led0", "ephy0_led1",
+						 "ephy1_led0", "ephy1_led1"};
+static const char * const xrx3xx_gphy_grps[] = {"gphy"};
+static const char * const xrx3xx_wlan_grps[] = {"wlan"};
+static const char * const xrx3xx_mcd_grps[] = {"mcd"};
+static const char * const xrx3xx_tdm_grps[] = {"tdm"};
+static const char * const xrx3xx_ssi0_grps[] = {"ssi0"};
+static const char * const xrx3xx_dsp_grps[] = {"dsp"};
+static const char * const xrx3xx_arc_grps[] = {"arc"};
 /* ase */
 static const char * const ase_exin_grps[] = {"exin0", "exin1", "exin2"};
 static const char * const ase_gpt_grps[] = {"gpt1", "gpt2", "gpt3"};
@@ -476,7 +668,23 @@ static const struct ltq_pmx_func xrx_fun
 	{"arc_jtag",	ARRAY_AND_SIZE(xrx_arc_jtag_grps)},
 	{"led",		ARRAY_AND_SIZE(xway_led_grps)},
 };
-
+static const struct ltq_pmx_func xrx3xx_funcs[] = {
+	{"spi",		ARRAY_AND_SIZE(xrx3xx_spi_grps)},
+	{"usif",	ARRAY_AND_SIZE(xrx3xx_usif_grps)},
+	{"cgu",		ARRAY_AND_SIZE(xrx3xx_cgu_grps)},
+	{"exin",	ARRAY_AND_SIZE(xrx3xx_exin_grps)},
+	{"ebu",		ARRAY_AND_SIZE(xrx3xx_ebu_grps)},
+	{"mdio",	ARRAY_AND_SIZE(xrx3xx_mdio_grps)},
+	{"stp",		ARRAY_AND_SIZE(xrx3xx_stp_grps)},
+	{"ephy",	ARRAY_AND_SIZE(xrx3xx_ephy_grps)},
+	{"gphy",	ARRAY_AND_SIZE(xrx3xx_gphy_grps)},
+	{"wlan",	ARRAY_AND_SIZE(xrx3xx_wlan_grps)},
+	{"mcd",		ARRAY_AND_SIZE(xrx3xx_mcd_grps)},
+	{"tdm",		ARRAY_AND_SIZE(xrx3xx_tdm_grps)},
+	{"ssi0",	ARRAY_AND_SIZE(xrx3xx_ssi0_grps)},
+	{"dsp",		ARRAY_AND_SIZE(xrx3xx_dsp_grps)},
+	{"arc",		ARRAY_AND_SIZE(xrx3xx_arc_grps)},
+};
 static const struct ltq_pmx_func ase_funcs[] = {
 	{"spi",		ARRAY_AND_SIZE(ase_spi_grps)},
 	{"asc",		ARRAY_AND_SIZE(ase_asc_grps)},
@@ -777,6 +985,7 @@ static struct gpio_chip xway_chip = {
 /* --------- register the pinctrl layer --------- */
 static const unsigned xway_exin_pin_map[] = {GPIO0, GPIO1, GPIO2, GPIO39, GPIO46, GPIO9};
 static const unsigned ase_exin_pins_map[] = {GPIO6, GPIO29, GPIO0};
+static const unsigned xrx3xx_exin_pins_map[] = {GPIO0, GPIO1, GPIO16, GPIO10, GPIO9};
 
 static struct pinctrl_xway_soc {
 	int pin_count;
@@ -807,6 +1016,10 @@ static struct pinctrl_xway_soc {
 		ase_grps, ARRAY_SIZE(ase_grps),
 		ase_funcs, ARRAY_SIZE(ase_funcs),
 		ase_exin_pins_map, 3},
+	{XRX3XX_MAX_PIN, xrx3xx_mfp,
+		xrx3xx_grps, ARRAY_SIZE(xrx3xx_grps),
+		xrx3xx_funcs, ARRAY_SIZE(xrx3xx_funcs),
+		xrx3xx_exin_pins_map, 5},
 };
 
 static struct pinctrl_gpio_range xway_gpio_range = {
@@ -817,7 +1030,7 @@ static struct pinctrl_gpio_range xway_gp
 static const struct of_device_id xway_match[] = {
 	{ .compatible = "lantiq,pinctrl-xway", .data = &soc_cfg[0]},
 	{ .compatible = "lantiq,pinctrl-xr9", .data = &soc_cfg[1]},
-	{ .compatible = "lantiq,pinctrl-ar10", .data = &soc_cfg[2]},
+	{ .compatible = "lantiq,pinctrl-ar10", .data = &soc_cfg[4]},
 	{ .compatible = "lantiq,pinctrl-ase", .data = &soc_cfg[3]},
 	{},
 };
