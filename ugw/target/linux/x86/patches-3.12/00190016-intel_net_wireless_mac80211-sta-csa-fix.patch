From 598c33ee6328d0478178c7a8b642d12bedaf36cd Mon Sep 17 00:00:00 2001
From: grishche <a.grishchenko@intel.com>
Date: Tue, 6 Jun 2017 15:05:52 +0300
Subject: [PATCH 17/20] mac80211-sta-csa-fix

---
 net/mac80211/mlme.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/net/mac80211/mlme.c b/net/mac80211/mlme.c
index 0bf1283..57ed4fb 100644
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -960,6 +960,8 @@ static void ieee80211_chswitch_work(struct work_struct *work)
 		container_of(work, struct ieee80211_sub_if_data, u.mgd.chswitch_work);
 	struct ieee80211_local *local = sdata->local;
 	struct ieee80211_if_managed *ifmgd = &sdata->u.mgd;
+	struct ieee80211_chanctx_conf *conf;
+	struct ieee80211_chanctx *ctx;
 
 	if (!ieee80211_sdata_running(sdata))
 		return;
@@ -976,6 +978,18 @@ static void ieee80211_chswitch_work(struct work_struct *work)
 	} else {
 		/* update the device channel directly */
 		local->hw.conf.chandef = local->_oper_chandef;
+		sdata->vif.bss_conf.chandef = local->_oper_chandef;
+		/* Update channel context */
+		if (!local->use_chanctx){
+			mutex_lock(&local->chanctx_mtx);
+			conf = rcu_dereference_protected(sdata->vif.chanctx_conf,
+				lockdep_is_held(&local->chanctx_mtx));
+			if (conf) {
+				ctx = container_of(conf, struct ieee80211_chanctx, conf);
+				ctx->conf.def = local->csa_chandef;
+			}
+			mutex_unlock(&local->chanctx_mtx);
+		}
 	}
 
 	/* XXX: shouldn't really modify cfg80211-owned data! */
-- 
2.10.1

