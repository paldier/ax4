From 5df3e061b71fd335bd2677ffe2fe2aba6383acd5 Mon Sep 17 00:00:00 2001
From: "Christensen, Taylor" <taylor.christensen@intel.com>
Date: Mon, 9 Nov 2015 16:22:34 -0800
Subject: [PATCH 073/639] SDHCI: HW mutex definitions

Theses are the definitions for the Macros for locking
and unlocking the HW mutexes. These are defined based
on a few statics and then a brief set of macro calls.
---
 include/linux/mmc/sdhci.h | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/include/linux/mmc/sdhci.h b/include/linux/mmc/sdhci.h
index f6a9812..26eb682 100644
--- a/include/linux/mmc/sdhci.h
+++ b/include/linux/mmc/sdhci.h
@@ -196,6 +196,18 @@ struct sdhci_host {
 };
 
 #ifdef CONFIG_HW_MUTEXES
+static DEFINE_MUTEX(mmc_access_lock);
+
+static void lock_emmc_access(void)
+{
+  might_sleep();
+  mutex_lock(&mmc_access_lock);
+}
+
+static void unlock_emmc_access(void)
+{
+  mutex_unlock(&mmc_access_lock);
+}
 
 #define EMMC_HW_MUTEX_IS_LOCKED(host) (hw_mutex_is_locked(HW_MUTEX_EMMC))
 
@@ -203,6 +215,7 @@ struct sdhci_host {
   if (((struct sdhci_host *)host->private)->flags & SDHCI_SUPPORT_HW_MUTEX)\
     {\
          hw_mutex_lock(HW_MUTEX_EMMC);\
+	 lock_emmc_access();\
 	 enable_irq(((struct sdhci_host *)host->private)->irq);\
     }\
   } while(0)
@@ -210,8 +223,9 @@ struct sdhci_host {
 #define UNLOCK_EMMC_HW_MUTEX(host) do{\
   if (((struct sdhci_host *)host->private)->flags & SDHCI_SUPPORT_HW_MUTEX)\
     {\
+         disable_irq(((struct sdhci_host *)host->private)->irq);\
+	 unlock_emmc_access();\
          hw_mutex_unlock(HW_MUTEX_EMMC);\
-	 disable_irq(((struct sdhci_host *)host->private)->irq);\
     }\
   } while(0)
 
-- 
2.10.1

