From ded4932b2712a34c08eaa621bab7c49cb8e44856 Mon Sep 17 00:00:00 2001
From: "Martinez, Ricardo" <ricardo.martinez@intel.com>
Date: Thu, 12 May 2016 10:27:22 -0700
Subject: [PATCH 398/639] iTCO_WDT: Clear the OS_POLICY bits used to detect
 boot hangs

BIOS is using the OS_POLICY bits in the TCO1_CNT register in order
to detect if the OS hangs during boot. The iTCO driver must clear
those bits in order to make sure we do not report a false positive
to the BIOS on the next reboot.
---
 drivers/watchdog/iTCO_wdt.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)
 mode change 100644 => 100755 drivers/watchdog/iTCO_wdt.c

diff --git a/drivers/watchdog/iTCO_wdt.c b/drivers/watchdog/iTCO_wdt.c
old mode 100644
new mode 100755
index e802a54..b81769e
--- a/drivers/watchdog/iTCO_wdt.c
+++ b/drivers/watchdog/iTCO_wdt.c
@@ -1,7 +1,7 @@
 /*
  *	intel TCO Watchdog Driver
  *
- *	(c) Copyright 2006-2011 Wim Van Sebroeck <wim@iguana.be>.
+ *	(c) Copyright 2006-2016 Wim Van Sebroeck <wim@iguana.be>.
  *
  *	This program is free software; you can redistribute it and/or
  *	modify it under the terms of the GNU General Public License
@@ -87,6 +87,8 @@
 #define TCO2_CNT	(TCOBASE + 0x0a) /* TCO2 Control Register	*/
 #define TCOv2_TMR	(TCOBASE + 0x12) /* TCOv2 Timer Initial Value	*/
 
+#define TCO1_CNT_OS_POLICY_MASK ((1<<20) | (1<<21))
+
 /* internal variables */
 static struct {		/* this is private data for the iTCO_wdt device */
 	/* TCO version/generation */
@@ -422,7 +424,7 @@ static void iTCO_wdt_cleanup(void)
 static int iTCO_wdt_probe(struct platform_device *dev)
 {
 	int ret = -ENODEV;
-	unsigned long val32;
+	u32 val32;
 	struct lpc_ich_info *ich_info = dev_get_platdata(&dev->dev);
 
 	if (!ich_info)
@@ -522,6 +524,13 @@ static int iTCO_wdt_probe(struct platform_device *dev)
 	watchdog_set_nowayout(&iTCO_wdt_watchdog_dev, nowayout);
 	iTCO_wdt_watchdog_dev.parent = dev->dev.parent;
 
+	/* Clear the OS_POLICY bits to indicate that the kernel booted fine. */
+	if (iTCO_wdt_private.iTCO_version == 3) {
+		val32 = inl(TCO1_CNT);
+		val32 &= ~TCO1_CNT_OS_POLICY_MASK;
+		outl(val32, TCO1_CNT);
+	}
+
 	/* Make sure the watchdog is not running */
 	iTCO_wdt_stop(&iTCO_wdt_watchdog_dev);
 
-- 
2.10.1

