From 92770179408cee1dfda5c24400032c6f3872016b Mon Sep 17 00:00:00 2001
From: Andrei Danaila <andrei.danaila@intel.com>
Date: Thu, 26 May 2016 13:45:28 -0700
Subject: [PATCH 404/639] kernel: include: Port Puma6 includes to Puma7

Port the kernel/includes folder from Puma 6 to Puma 7
as part of the P6/P7 branch merge.

Change-Id: I576bcde60aa335d4d9b04bc5dd8d71b676aac285
Signed-off-by: Andrei Danaila <andrei.danaila@intel.com>
---
 include/asm-generic/gpio.h   | 19 +++++++++++++++++++
 include/linux/i2c/pxa-i2c.h  |  3 +++
 include/linux/mtd/blktrans.h |  3 +++
 include/linux/spi/spi.h      |  7 +++++++
 include/uapi/linux/i2c-dev.h |  4 ++++
 5 files changed, 36 insertions(+)

diff --git a/include/asm-generic/gpio.h b/include/asm-generic/gpio.h
index 5e8f1c9..917e05e 100644
--- a/include/asm-generic/gpio.h
+++ b/include/asm-generic/gpio.h
@@ -25,8 +25,12 @@
  */
 
 #ifndef ARCH_NR_GPIOS
+#ifdef CONFIG_ARCH_GEN3   
+#define ARCH_NR_GPIOS		256
+#else
 #define ARCH_NR_GPIOS		512
 #endif
+#endif
 
 /*
  * "valid" GPIO numbers are nonnegative and may be passed to
@@ -113,6 +117,10 @@ struct gpio_chip {
 						unsigned offset);
 	int			(*get)(struct gpio_chip *chip,
 						unsigned offset);
+#ifdef CONFIG_ARCH_GEN3        
+       int                     (*get_multi_function)(struct gpio_chip *chip, unsigned offset);
+#endif
+
 	int			(*direction_output)(struct gpio_chip *chip,
 						unsigned offset, int value);
 	int			(*set_debounce)(struct gpio_chip *chip,
@@ -120,6 +128,9 @@ struct gpio_chip {
 
 	void			(*set)(struct gpio_chip *chip,
 						unsigned offset, int value);
+#ifdef CONFIG_ARCH_GEN3
+        int                     (*set_multi_function)(struct gpio_chip *chip, unsigned offset, int fn_num);
+#endif
 
 	int			(*to_irq)(struct gpio_chip *chip,
 						unsigned offset);
@@ -179,6 +190,14 @@ extern int gpio_set_debounce(unsigned gpio, unsigned debounce);
 
 extern int gpio_get_value_cansleep(unsigned gpio);
 extern void gpio_set_value_cansleep(unsigned gpio, int value);
+#ifdef CONFIG_ARCH_GEN3
+extern int gpio_get_multi_function(unsigned gpio);
+extern int gpio_set_multi_function(unsigned gpio, int value);
+
+typedef void *gpio_irq_handle;
+extern gpio_irq_handle  gpio_request_irq(unsigned gpio, void (*func)(void *data), unsigned long flags, const char *name, void *data);
+extern int gpio_free_irq(gpio_irq_handle handle, void *data);
+#endif
 
 
 /* A platform's <asm/gpio.h> code may want to inline the I/O calls when
diff --git a/include/linux/i2c/pxa-i2c.h b/include/linux/i2c/pxa-i2c.h
index 53aab24..f96a4d3 100644
--- a/include/linux/i2c/pxa-i2c.h
+++ b/include/linux/i2c/pxa-i2c.h
@@ -65,6 +65,9 @@ struct i2c_pxa_platform_data {
 	unsigned int		slave_addr;
 	struct i2c_slave_client	*slave;
 	unsigned int		class;
+#ifdef CONFIG_GEN3_I2C
+	unsigned int        set_iwcr_flag :1;
+#endif
 	unsigned int		use_pio :1;
 	unsigned int		fast_mode :1;
 	unsigned int		high_mode:1;
diff --git a/include/linux/mtd/blktrans.h b/include/linux/mtd/blktrans.h
index e93837f..f2d63df2 100644
--- a/include/linux/mtd/blktrans.h
+++ b/include/linux/mtd/blktrans.h
@@ -44,6 +44,9 @@ struct mtd_blktrans_dev {
 	struct kref ref;
 	struct gendisk *disk;
 	struct attribute_group *disk_attributes;
+#ifdef CONFIG_ARCH_GEN3 
+        struct semaphore        thread_sem;
+#endif  
 	struct workqueue_struct *wq;
 	struct work_struct work;
 	struct request_queue *rq;
diff --git a/include/linux/spi/spi.h b/include/linux/spi/spi.h
index 887116d..37aba28 100644
--- a/include/linux/spi/spi.h
+++ b/include/linux/spi/spi.h
@@ -82,6 +82,8 @@ struct spi_device {
 #define	SPI_MODE_2	(SPI_CPOL|0)
 #define	SPI_MODE_3	(SPI_CPOL|SPI_CPHA)
 #define	SPI_CS_HIGH	0x04			/* chipselect active high? */
+#define SPI_MODE_QUAD_IO 0x05                   /* Quad IO mode using 4 wire */
+#define SPI_MODE_DUAL_IO 0x06                   /* Dual IO mode using 2 wire */
 #define	SPI_LSB_FIRST	0x08			/* per-word bits-on-wire */
 #define	SPI_3WIRE	0x10			/* SI/SO signals shared */
 #define	SPI_LOOP	0x20			/* loopback mode */
@@ -301,6 +303,8 @@ struct spi_master {
 	 * would normally use bus_num=2 for that controller.
 	 */
 	s16			bus_num;
+	/*  using_slave is to recognize the slave controller, slave controller is considrer to fake into one master with one spi device*/
+    	u16 			using_slave;
 
 	/* chipselects will be integral to many controllers; some others
 	 * might use board-specific GPIOs.
@@ -911,6 +915,9 @@ struct spi_board_info {
 #ifdef	CONFIG_SPI
 extern int
 spi_register_board_info(struct spi_board_info const *info, unsigned n);
+#ifdef CONFIG_GEN3_SPI
+extern int spi_unregister_board_info(struct spi_board_info *info, unsigned n);
+#endif
 #else
 /* board init code may ignore whether SPI is configured or not */
 static inline int
diff --git a/include/uapi/linux/i2c-dev.h b/include/uapi/linux/i2c-dev.h
index 3f31155..3659463 100644
--- a/include/uapi/linux/i2c-dev.h
+++ b/include/uapi/linux/i2c-dev.h
@@ -51,6 +51,10 @@
 #define I2C_PEC		0x0708	/* != 0 to use PEC with SMBus */
 #define I2C_SMBUS	0x0720	/* SMBus transfer */
 
+#ifdef CONFIG_GEN3_I2C
+#define I2C_SET_MODE 0x0780
+#endif
+
 
 /* This is the structure as used in the I2C_SMBUS ioctl call */
 struct i2c_smbus_ioctl_data {
-- 
2.10.1

