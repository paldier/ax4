From f56991083eb8f287f7bfb793c31ea189a1ef6131 Mon Sep 17 00:00:00 2001
From: Andrei Danaila <andrei.danaila@intel.com>
Date: Thu, 26 May 2016 14:07:51 -0700
Subject: [PATCH 406/639] x86: Port Puma6 code to Puma7

Port Puma6 kernel code to Puma7.

Change-Id: If86d86c14f56041c1befdf7547e8d50608783b8d

x86: Merge Puma6 and Puma7

resolved build issue for Puma7 in hwmutex
Resolved boot issue for Puma6. Junk characters at bootup because
of incorrect baud.

Signed-off-by: Pawan Gupta <pawan.kumarx.gupta@intel.com>
---
 arch/x86/hw_mutex/hw_mutex_lld.c      |  8 ++--
 arch/x86/include/asm/hpet.h           |  6 +++
 arch/x86/include/asm/mwait.h          |  8 ++++
 arch/x86/include/asm/pci.h            | 71 +++++++++++++++++++++++++++++++++++
 arch/x86/include/asm/serial.h         | 33 ++++++++++++++++
 arch/x86/include/asm/suspend_32.h     |  4 ++
 arch/x86/include/uapi/asm/bootparam.h |  7 ++++
 arch/x86/kernel/early_printk.c        |  3 +-
 arch/x86/kernel/process.c             |  1 +
 arch/x86/mm/init_32.c                 | 17 +++++++++
 arch/x86/mm/pat.c                     |  8 ++++
 arch/x86/pci/Makefile                 |  1 +
 arch/x86/pci/acpi.c                   |  9 +++++
 arch/x86/power/cpu.c                  |  6 +++
 kernel/hwmutex.c                      |  6 +--
 kernel/irq/chip.c                     |  3 ++
 kernel/irq/irqdesc.c                  |  6 +++
 kernel/pid.c                          |  4 ++
 kernel/power/main.c                   |  8 +++-
 kernel/reboot.c                       | 17 +++++++++
 kernel/signal.c                       |  7 ++++
 21 files changed, 222 insertions(+), 11 deletions(-)

diff --git a/arch/x86/hw_mutex/hw_mutex_lld.c b/arch/x86/hw_mutex/hw_mutex_lld.c
index 8a8af1e..8db375a 100644
--- a/arch/x86/hw_mutex/hw_mutex_lld.c
+++ b/arch/x86/hw_mutex/hw_mutex_lld.c
@@ -337,7 +337,7 @@ free_dev:
 	return ret;
 }
 
-#elif CONFIG_X86_PUMA7
+#elif defined(CONFIG_X86_PUMA7)
 void hw_mutex_register_with_netss(void)
 {
    int i, ret = -ENODEV;
@@ -457,7 +457,7 @@ static void hw_mutex_remove(struct pci_dev *pdev)
 	DEBUG_PRINT;
 	printk(KERN_INFO "HW Mutex: Device exit \n");
 }
-#elif CONFIG_X86_PUMA7
+#elif defined(CONFIG_X86_PUMA7)
 static void hw_mutex_unregister_with_netss(void)
 {
    hw_mutex_unregister(pmaster);
@@ -494,7 +494,7 @@ static int __init hw_mutex_lld_init (void)
 {
 #ifdef CONFIG_X86_PUMA6
    return pci_register_driver(&hw_mutex_driver);
-#elif CONFIG_X86_PUMA7
+#elif defined(CONFIG_X86_PUMA7)
   hw_mutex_register_with_netss();   
   return 0;
 #endif
@@ -504,7 +504,7 @@ static void __exit hw_mutex_lld_exit(void)
 {
 #ifdef CONFIG_X86_PUMA6
    pci_unregister_driver(&hw_mutex_driver);
-#elif CONFIG_X86_PUMA7
+#elif defined(CONFIG_X86_PUMA7)
    hw_mutex_unregister_with_netss();
 #endif
 }
diff --git a/arch/x86/include/asm/hpet.h b/arch/x86/include/asm/hpet.h
index b18df57..9914395e 100644
--- a/arch/x86/include/asm/hpet.h
+++ b/arch/x86/include/asm/hpet.h
@@ -70,6 +70,12 @@ extern int is_hpet_enabled(void);
 extern int hpet_enable(void);
 extern void hpet_disable(void);
 extern unsigned int hpet_readl(unsigned int a);
+
+#ifdef CONFIG_ARCH_GEN3
+extern void hpet_enable_legacy_int(void);
+extern void hpet_disable_legacy_int(void);
+#endif
+
 extern void force_hpet_resume(void);
 
 struct irq_data;
diff --git a/arch/x86/include/asm/mwait.h b/arch/x86/include/asm/mwait.h
index 361b02e..b70f712 100644
--- a/arch/x86/include/asm/mwait.h
+++ b/arch/x86/include/asm/mwait.h
@@ -30,6 +30,14 @@ static inline void __mwait(unsigned long eax, unsigned long ecx)
 		     :: "a" (eax), "c" (ecx));
 }
 
+static inline void __sti_mwait(unsigned long eax, unsigned long ecx)
+{
+       trace_hardirqs_on();
+       /* "mwait %eax, %ecx;" */
+       asm volatile("sti; .byte 0x0f, 0x01, 0xc9;"
+                    :: "a" (eax), "c" (ecx));
+}
+
 /*
  * This uses new MONITOR/MWAIT instructions on P4 processors with PNI,
  * which can obviate IPI to trigger checking of need_resched.
diff --git a/arch/x86/include/asm/pci.h b/arch/x86/include/asm/pci.h
index 7d74432..e41e371 100644
--- a/arch/x86/include/asm/pci.h
+++ b/arch/x86/include/asm/pci.h
@@ -159,4 +159,75 @@ struct pci_setup_rom {
 	uint8_t romdata[0];
 };
 
+#define CE3100_SOC_DEVICE_ID 0x2E50
+#define CE4100_SOC_DEVICE_ID 0x0708
+#define CE4200_SOC_DEVICE_ID 0x0709
+#define CE5300_SOC_DEVICE_ID 0x0C40
+#define CE2600_SOC_DEVICE_ID 0x0931
+
+#ifdef CONFIG_ARCH_GEN3
+
+
+#define INTELCE_EMMC_PCI_DEVICE_ID       0x070b
+#define INTELCE_SFLASH_PCI_DEVICE_ID     0x08a0
+#define INTELCE_HWMUTEX_PCI_DEVICE_ID    0x0949
+#define INTELCE_GPIO_PCI_DEVICE_ID       0x2e67
+#define INTELCE_CP_TOP_PCI_DEVICE_ID     0x2e52
+#define INTELCE_DOCSIS_PCI_DEVICE_ID     0x0946
+#define INTELCE_DOCSIS_DMA_PCI_DEVICE_ID     0x0948
+#define INTELCE_L2_SWITCH_PCI_DEVICE_ID      0x0947
+
+
+
+int intelce_get_soc_info(unsigned int *id, unsigned int *rev);
+
+int intelce_set_board_type(unsigned int board_type);
+int intelce_get_board_type(unsigned int *board_type);
+int intelce_set_board_rev(unsigned int board_rev);
+int intelce_get_board_rev(unsigned int *board_rev);
+void intelce_set_flash_layout_table(u64 physical_addr, u32 len);
+int intelce_get_flash_layout_table(unsigned char **table, int *len);
+
+/** This enum defines the board types that can have CE2600
+ * These values should be exactly same what defined in CEFDK */
+typedef enum ce2600_board_type {
+   HP_BOARD_TYPE = 0,
+   HP_MG_BOARD_TYPE,
+   FM_BOARD_TYPE,
+   CAT_ISLAND_BOARD_TYPE,
+   GS_BOARD_TYPE,
+   CR_BOARD_TYPE,
+   BL_BOARD_TYPE,
+   AP_BOARD_TYPE,
+   AP_MG_BOARD_TYPE,
+   OP_MG_BOARD_TYPE
+}ce2600_board_type_t;
+
+/** This enum defines the intelce board revisions.
+ * These values should be exactly same what defined in CEFDK */
+typedef enum intelce_board_revision {
+   BOARD_REVISION_0_0 = 0,
+   BOARD_REVISION_0_1 = 1,
+   BOARD_REVISION_0_2 = 2,
+   BOARD_REVISION_1_0 = 10,
+   BOARD_REVISION_1_1 = 11,
+   BOARD_REVISION_1_2 = 12,
+   BOARD_REVISION_2_0 = 20,
+   BOARD_REVISION_2_1 = 21,
+   BOARD_REVISION_2_2 = 22,
+   BOARD_REVISION_3_0 = 30,
+   BOARD_REVISION_3_1 = 31,
+   BOARD_REVISION_3_2 = 32,
+   BOARD_REVISION_4_0 = 40,
+   BOARD_REVISION_4_1 = 41,
+   BOARD_REVISION_4_2 = 42,
+   BOARD_REVISION_5_0 = 50,
+   BOARD_REVISION_5_1 = 51,
+   BOARD_REVISION_5_2 = 52,
+
+   BOARD_REVISION_UNKNOWN = 1000
+}intelce_board_revision_t;
+
+#endif
+
 #endif /* _ASM_X86_PCI_H */
diff --git a/arch/x86/include/asm/serial.h b/arch/x86/include/asm/serial.h
index 628c801..f51b977 100644
--- a/arch/x86/include/asm/serial.h
+++ b/arch/x86/include/asm/serial.h
@@ -8,7 +8,18 @@
  * clock, since the 16550A is capable of handling a top speed of 1.5
  * megabits/second; but this requires the faster clock.
  */
+
+/*
+ * The following code is for Intel Media SOC Gen3 base support.
+*/
+#ifdef CONFIG_GEN3_UART
+/*
+ * The Intel Media SOC Gen3 has a high freqency clock.
+*/
+#define BASE_BAUD ( 14745600 / 16 )
+#else
 #define BASE_BAUD ( 1843200 / 16 )
+#endif
 
 /* Standard COM flags (except for COM4, because of the 8514 problem) */
 #ifdef CONFIG_SERIAL_DETECT_IRQ
@@ -19,11 +30,33 @@
 #define STD_COM4_FLAGS ASYNC_BOOT_AUTOCONF
 #endif
 
+/*
+ * The following code is for Intel Media SOC Gen3 base support.
+*/
+#ifdef CONFIG_GEN3_UART
+/*
+ * Definition of the serial port for Intel Media SOC Gen3.
+*/
+#ifdef CONFIG_SMP
+#define SERIAL_PORT_DFNS			\
+	/* UART CLK   PORT IRQ     FLAGS        */			\
+	{ 0, BASE_BAUD, 0x3F8, 38, STD_COM_FLAGS },	/* ttyS0 */	\
+	{ 0, BASE_BAUD, 0x2F8, 38, STD_COM_FLAGS },	/* ttyS1 */	\
+	{ 0, BASE_BAUD, 0x3E8, 38, STD_COM_FLAGS },	/* ttyS2 */
+#else
+#define SERIAL_PORT_DFNS			\
+	/* UART CLK   PORT IRQ     FLAGS        */			\
+	{ 0, BASE_BAUD, 0x3F8, 4, STD_COM_FLAGS },	/* ttyS0 */	\
+	{ 0, BASE_BAUD, 0x2F8, 4, STD_COM_FLAGS },	/* ttyS1 */	\
+	{ 0, BASE_BAUD, 0x3E8, 4, STD_COM_FLAGS },	/* ttyS2 */
+#endif
+#else
 #define SERIAL_PORT_DFNS			\
 	/* UART CLK   PORT IRQ     FLAGS        */			\
 	{ 0, BASE_BAUD, 0x3F8, 4, STD_COM_FLAGS },	/* ttyS0 */	\
 	{ 0, BASE_BAUD, 0x2F8, 3, STD_COM_FLAGS },	/* ttyS1 */	\
 	{ 0, BASE_BAUD, 0x3E8, 4, STD_COM_FLAGS },	/* ttyS2 */	\
 	{ 0, BASE_BAUD, 0x2E8, 3, STD_COM4_FLAGS },	/* ttyS3 */
+#endif
 
 #endif /* _ASM_X86_SERIAL_H */
diff --git a/arch/x86/include/asm/suspend_32.h b/arch/x86/include/asm/suspend_32.h
index 552d6c9..013487f 100644
--- a/arch/x86/include/asm/suspend_32.h
+++ b/arch/x86/include/asm/suspend_32.h
@@ -11,7 +11,11 @@
 
 /* image of the saved processor state */
 struct saved_context {
+#if IS_ENABLED(CONFIG_X86_PUMA6)
+	u16 ds, es, fs, gs, ss;
+#else
 	u16 es, fs, gs, ss;
+#endif
 	unsigned long cr0, cr2, cr3, cr4;
 	u64 misc_enable;
 	bool misc_enable_saved;
diff --git a/arch/x86/include/uapi/asm/bootparam.h b/arch/x86/include/uapi/asm/bootparam.h
index 9c3733c..5e76bd8 100644
--- a/arch/x86/include/uapi/asm/bootparam.h
+++ b/arch/x86/include/uapi/asm/bootparam.h
@@ -7,6 +7,13 @@
 #define SETUP_DTB			2
 #define SETUP_PCI			3
 
+#ifdef CONFIG_ARCH_GEN3
+#define SETUP_BOARD_TYPE          (0x1000)
+#define SETUP_GMAC_PHY_MODE	  (0x1001)
+#define SETUP_BOARD_REV		  (0x1002)
+#define SETUP_FLASH_LAYOUT_TABLE		  (0x1003)
+#endif
+
 /* ram_size flags */
 #define RAMDISK_IMAGE_START_MASK	0x07FF
 #define RAMDISK_PROMPT_FLAG		0x8000
diff --git a/arch/x86/kernel/early_printk.c b/arch/x86/kernel/early_printk.c
index 9ddb90e..f6bc48e 100644
--- a/arch/x86/kernel/early_printk.c
+++ b/arch/x86/kernel/early_printk.c
@@ -18,8 +18,7 @@
 #include <asm/pgtable.h>
 #include <linux/usb/ehci_def.h>
 
-#ifdef CONFIG_ARCH_GEN3
-#include <asm/mrst.h>
+#ifdef CONFIG_X86_PUMA6
 #include <asm/serial.h>
 #endif
 
diff --git a/arch/x86/kernel/process.c b/arch/x86/kernel/process.c
index c5db2a4..765d338 100644
--- a/arch/x86/kernel/process.c
+++ b/arch/x86/kernel/process.c
@@ -28,6 +28,7 @@
 #include <asm/fpu-internal.h>
 #include <asm/debugreg.h>
 #include <asm/nmi.h>
+#include <asm/mwait.h>
 
 /*
  * per-CPU TSS segments. Threads are completely 'soft' on Linux,
diff --git a/arch/x86/mm/init_32.c b/arch/x86/mm/init_32.c
index 948e91b..e362c00 100644
--- a/arch/x86/mm/init_32.c
+++ b/arch/x86/mm/init_32.c
@@ -55,6 +55,16 @@
 
 #include "mm_internal.h"
 
+#ifdef CONFIG_ARCH_GEN3
+#define GBE_CONFIG_RAM_BASE    0x60000
+#define GBE_CONFIG_DATA_LENGTH 0x200
+/* from $(KERNEL)/drivers/net/e1000/gbe_mac_access.h */
+#define ACPI_RAM_BASE    0x10000
+#define ACPI_DATA_LENGTH 0x8000
+#define INTEL_8051_RAM_BASE    0x40000
+#define INTEL_8051_DATA_LENGTH 0x10000
+#endif
+
 unsigned long highstart_pfn, highend_pfn;
 
 static noinline int do_test_wp_bit(void);
@@ -686,6 +696,13 @@ void __init setup_bootmem_allocator(void)
 	printk(KERN_INFO "  mapped low ram: 0 - %08lx\n",
 		 max_pfn_mapped<<PAGE_SHIFT);
 	printk(KERN_INFO "  low ram: 0 - %08lx\n", max_low_pfn<<PAGE_SHIFT);
+#ifdef CONFIG_ARCH_GEN3
+#ifdef CONFIG_SMP
+	memblock_reserve(GBE_CONFIG_RAM_BASE, GBE_CONFIG_DATA_LENGTH); //RAM reverve for Gbe mac
+        memblock_reserve(ACPI_RAM_BASE, ACPI_DATA_LENGTH); //RAM reserve for ACPI data
+        memblock_reserve(INTEL_8051_RAM_BASE, INTEL_8051_DATA_LENGTH);//RAM reserver for 8051 firmware
+#endif
+#endif
 }
 
 /*
diff --git a/arch/x86/mm/pat.c b/arch/x86/mm/pat.c
index 6574388..d1fe2aa 100644
--- a/arch/x86/mm/pat.c
+++ b/arch/x86/mm/pat.c
@@ -487,6 +487,10 @@ pgprot_t phys_mem_access_prot(struct file *file, unsigned long pfn,
 	return vma_prot;
 }
 
+#ifdef CONFIG_ARCH_GEN3
+EXPORT_SYMBOL_GPL(phys_mem_access_prot);
+#endif
+
 #ifdef CONFIG_STRICT_DEVMEM
 /* This check is done in drivers/char/mem.c in case of STRICT_DEVMEM*/
 static inline int range_is_allowed(unsigned long pfn, unsigned long size)
@@ -552,6 +556,10 @@ int phys_mem_access_prot_allowed(struct file *file, unsigned long pfn,
 	return 1;
 }
 
+#ifdef CONFIG_ARCH_GEN3
+EXPORT_SYMBOL_GPL(phys_mem_access_prot_allowed);
+#endif
+
 /*
  * Change the memory type for the physial address range in kernel identity
  * mapping space if that range is a part of identity map.
diff --git a/arch/x86/pci/Makefile b/arch/x86/pci/Makefile
index e063eed..919f3f2 100644
--- a/arch/x86/pci/Makefile
+++ b/arch/x86/pci/Makefile
@@ -5,6 +5,7 @@ obj-$(CONFIG_PCI_MMCONFIG)	+= mmconfig_$(BITS).o direct.o mmconfig-shared.o
 obj-$(CONFIG_PCI_DIRECT)	+= direct.o
 obj-$(CONFIG_PCI_OLPC)		+= olpc.o
 obj-$(CONFIG_PCI_XEN)		+= xen.o
+obj-$(CONFIG_ARCH_GEN3)         += intel_media_proc_gen3.o
 
 obj-y				+= fixup.o
 obj-$(CONFIG_X86_INTEL_CE)      += ce4100.o
diff --git a/arch/x86/pci/acpi.c b/arch/x86/pci/acpi.c
index a24e9c2..973d01d 100644
--- a/arch/x86/pci/acpi.c
+++ b/arch/x86/pci/acpi.c
@@ -22,7 +22,16 @@ struct pci_root_info {
 #endif
 };
 
+/*
+ * The following code is for Intel Media SOC SMP support. Since kernel can not get a correct ACPI data from CEFDK,
+ * thus by default we force to ignore host bridge windows from ACPI
+ */
+#if defined(CONFIG_ARCH_GEN3) & defined(CONFIG_SMP)
+static bool pci_use_crs = false;
+#else
 static bool pci_use_crs = true;
+#endif
+
 static bool pci_ignore_seg = false;
 
 static int __init set_use_crs(const struct dmi_system_id *id)
diff --git a/arch/x86/power/cpu.c b/arch/x86/power/cpu.c
index 6c8e2f5..1f70e2a 100644
--- a/arch/x86/power/cpu.c
+++ b/arch/x86/power/cpu.c
@@ -80,6 +80,9 @@ static void __save_processor_state(struct saved_context *ctxt)
 	 * segment registers
 	 */
 #ifdef CONFIG_X86_32
+#if IS_ENABLED(CONFIG_X86_PUMA6)
+	savesegment(ds, ctxt->ds);
+#endif
 	savesegment(es, ctxt->es);
 	savesegment(fs, ctxt->fs);
 	savesegment(gs, ctxt->gs);
@@ -202,6 +205,9 @@ static void __restore_processor_state(struct saved_context *ctxt)
 	 * segment registers
 	 */
 #ifdef CONFIG_X86_32
+#if IS_ENABLED(CONFIG_X86_PUMA6)
+	loadsegment(ds, ctxt->ds);
+#endif
 	loadsegment(es, ctxt->es);
 	loadsegment(fs, ctxt->fs);
 	loadsegment(gs, ctxt->gs);
diff --git a/kernel/hwmutex.c b/kernel/hwmutex.c
index 83d9a67..9438a42 100644
--- a/kernel/hwmutex.c
+++ b/kernel/hwmutex.c
@@ -33,9 +33,7 @@
 #include <linux/module.h>
 #include <linux/sched.h>
 #include <linux/module.h>
-#ifdef CONFIG_X86_PUMA7
 #include <linux/netip_subsystem.h>
-#endif
 #include <linux/hw_mutex.h>
 
 #include "hwmutex.h"
@@ -454,7 +452,7 @@ int hw_mutex_register (struct hw_master *pmaster)
          printk(KERN_ERR "HW Mutex: Unable to allocate IRQ\n");
          return -ENODEV;
       }
-#elif CONFIG_X86_PUMA7
+#elif defined(CONFIG_X86_PUMA7)
      netss_power_state_callback_info_t pm_callback_info;
      netss_interrupt_info_t irq_info;
      irq_info.func = &hw_mutex_isr;
@@ -480,7 +478,7 @@ void hw_mutex_unregister(struct hw_master *pmaster)
     if (pmaster->mode != HW_MUTEX_POLLING) {
         free_irq(pmaster->irq_num,(void *)pmaster);
     }
-#elif CONFIG_X86_PUMA7
+#elif defined(CONFIG_X86_PUMA7)
    netss_interrupt_info_t irq_info;
    irq_info.func = NULL;
    irq_info.args = NULL;
diff --git a/kernel/irq/chip.c b/kernel/irq/chip.c
index a3bb14f..ab9b392 100644
--- a/kernel/irq/chip.c
+++ b/kernel/irq/chip.c
@@ -486,6 +486,9 @@ out:
 		goto out_eoi;
 	goto out_unlock;
 }
+#ifdef CONFIG_ARCH_GEN3
+EXPORT_SYMBOL_GPL(handle_fasteoi_irq);
+#endif
 
 /**
  *	handle_edge_irq - edge type IRQ handler
diff --git a/kernel/irq/irqdesc.c b/kernel/irq/irqdesc.c
index 07d4551..159eac9 100644
--- a/kernel/irq/irqdesc.c
+++ b/kernel/irq/irqdesc.c
@@ -264,6 +264,12 @@ struct irq_desc irq_desc[NR_IRQS] __cacheline_aligned_in_smp = {
 	}
 };
 
+#ifdef CONFIG_ARCH_GEN3
+#ifdef CONFIG_SMP
+EXPORT_SYMBOL(irq_desc);
+#endif
+#endif
+
 int __init early_irq_init(void)
 {
 	int count, i, node = first_online_node;
diff --git a/kernel/pid.c b/kernel/pid.c
index bbb805c..92ceee1 100644
--- a/kernel/pid.c
+++ b/kernel/pid.c
@@ -459,6 +459,10 @@ struct task_struct *find_task_by_vpid(pid_t vnr)
 	return find_task_by_pid_ns(vnr, task_active_pid_ns(current));
 }
 
+#ifdef CONFIG_ARCH_GEN3
+EXPORT_SYMBOL(find_task_by_vpid);
+#endif
+
 struct pid *get_task_pid(struct task_struct *task, enum pid_type type)
 {
 	struct pid *pid;
diff --git a/kernel/power/main.c b/kernel/power/main.c
index 3ae41cd..c0e0059 100644
--- a/kernel/power/main.c
+++ b/kernel/power/main.c
@@ -45,9 +45,15 @@ int pm_notifier_call_chain(unsigned long val)
 	return notifier_to_errno(ret);
 }
 
+#ifdef CONFIG_ARCH_GEN3
+/*
+ *	Devices are suspended and resumed synchronously in Intel Media SOCs
+*/
+int pm_async_enabled = 0;
+#else
 /* If set, devices may be suspended and resumed asynchronously. */
 int pm_async_enabled = 1;
-
+#endif
 static ssize_t pm_async_show(struct kobject *kobj, struct kobj_attribute *attr,
 			     char *buf)
 {
diff --git a/kernel/reboot.c b/kernel/reboot.c
index 662c83f..b0f3436 100644
--- a/kernel/reboot.c
+++ b/kernel/reboot.c
@@ -41,7 +41,11 @@ enum reboot_mode reboot_mode DEFAULT_REBOOT_MODE;
  */
 int reboot_default = 1;
 int reboot_cpu;
+#ifdef CONFIG_ARCH_GEN3
+enum reboot_type reboot_type = BOOT_KBD;
+#else
 enum reboot_type reboot_type = BOOT_ACPI;
+#endif
 int reboot_force;
 
 /*
@@ -224,11 +228,24 @@ SYSCALL_DEFINE4(reboot, int, magic1, int, magic2, unsigned int, cmd,
 	if (ret)
 		return ret;
 
+/*
+ * The following code is for Intel Media SOC Gen3 base support.
+*/
+
+/*
+ * Since the power management is not enabled for Intel Media SOC
+ * Gen3, so the pm_power_off is not set, and therefore the command
+ * LINUX_REBOOT_CMD_POWER_OFF will be changed to LINUX_REBOOT_CMD_HALT.
+ * To let the poweroff command proceed, we comment out the following
+ * piece of code.
+*/
+#ifndef CONFIG_ARCH_GEN3
 	/* Instead of trying to make the power_off code look like
 	 * halt when pm_power_off is not set do it the easy way.
 	 */
 	if ((cmd == LINUX_REBOOT_CMD_POWER_OFF) && !pm_power_off)
 		cmd = LINUX_REBOOT_CMD_HALT;
+#endif
 
 	mutex_lock(&reboot_mutex);
 	switch (cmd) {
diff --git a/kernel/signal.c b/kernel/signal.c
index e991362..4df6a07 100644
--- a/kernel/signal.c
+++ b/kernel/signal.c
@@ -2506,6 +2506,13 @@ EXPORT_SYMBOL(sigprocmask);
 EXPORT_SYMBOL(block_all_signals);
 EXPORT_SYMBOL(unblock_all_signals);
 
+/*
+ * The following code is for Intel Media SOC Gen3 base support.
+*/
+#ifdef CONFIG_ARCH_GEN3
+EXPORT_SYMBOL(kill_pid_info);   /* Export this symbol for graphic driver */
+#endif
+
 
 /*
  * System call entry points.
-- 
2.10.1

