From f4d3304543fce956f52ba6f00ebb45df06785878 Mon Sep 17 00:00:00 2001
From: Andrei Danaila <andrei.danaila@intel.com>
Date: Thu, 2 Jun 2016 17:04:57 -0700
Subject: [PATCH 410/639] base: Port base drivers from P6 to P7

Port base core and powere drivers from Puma6 branch
to Puma7.

Change-Id: Icb204a79af9342e24224ced96ffbb205c0e11d75
Signed-off-by: Andrei Danaila <andrei.danaila@intel.com>
---
 drivers/base/core.c       |  4 ++++
 drivers/base/power/main.c | 23 +++++++++++++++++++++++
 2 files changed, 27 insertions(+)

diff --git a/drivers/base/core.c b/drivers/base/core.c
index 944fecd..8d33d86 100644
--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@ -1327,7 +1327,11 @@ void device_unregister(struct device *dev)
 }
 EXPORT_SYMBOL_GPL(device_unregister);
 
+#ifdef CONFIG_ARCH_GEN3
+struct device *next_device(struct klist_iter *i)
+#else
 static struct device *next_device(struct klist_iter *i)
+#endif
 {
 	struct klist_node *n = klist_next(i);
 	struct device *dev = NULL;
diff --git a/drivers/base/power/main.c b/drivers/base/power/main.c
index 9f098a8..7b4a51d 100644
--- a/drivers/base/power/main.c
+++ b/drivers/base/power/main.c
@@ -33,6 +33,11 @@
 #include "../base.h"
 #include "power.h"
 
+#ifdef CONFIG_ARCH_GEN3
+int suspend_device(struct device *dev, pm_message_t state);
+int resume_device(struct device *dev, pm_message_t state);
+#endif
+
 typedef int (*pm_callback_t)(struct device *);
 
 /*
@@ -55,7 +60,11 @@ struct suspend_stats suspend_stats;
 static DEFINE_MUTEX(dpm_list_mtx);
 static pm_message_t pm_transition;
 
+#ifdef CONFIG_ARCH_GEN3
+int async_error;
+#else
 static int async_error;
+#endif
 
 static char *pm_verb(int event)
 {
@@ -662,6 +671,13 @@ static void async_resume(void *data, async_cookie_t cookie)
 	put_device(dev);
 }
 
+#ifdef CONFIG_ARCH_GEN3
+int resume_device(struct device *dev, pm_message_t state)
+{
+        return device_resume(dev,state,false);
+}
+#endif
+
 static bool is_async(struct device *dev)
 {
 	return dev->power.async_suspend && pm_async_enabled
@@ -1175,6 +1191,13 @@ static int device_suspend(struct device *dev)
 	return __device_suspend(dev, pm_transition, false);
 }
 
+#if CONFIG_ARCH_GEN3
+int suspend_device(struct device *dev, pm_message_t state)
+{
+       return  __device_suspend(dev, state, false);
+}
+#endif
+
 /**
  * dpm_suspend - Execute "suspend" callbacks for all non-sysdev devices.
  * @state: PM transition of the system being carried out.
-- 
2.10.1

