From 4baa0271975a9171697c308f75b9a86cd968b482 Mon Sep 17 00:00:00 2001
From: Vinay Patel <vinay.r.patel@intel.com>
Date: Thu, 16 Jun 2016 14:49:07 -0700
Subject: [PATCH 430/639] platform: workaround for reset button duration Puma
 platfrom driver to use the workaround mirrored value of reset button duration
 instead of reset info register.

Signed-off-by: Vinay Patel <vinay.r.patel@intel.com>
---
 drivers/platform/x86/puma_acpi.c | 16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

diff --git a/drivers/platform/x86/puma_acpi.c b/drivers/platform/x86/puma_acpi.c
index 63c08e3..50305d4 100644
--- a/drivers/platform/x86/puma_acpi.c
+++ b/drivers/platform/x86/puma_acpi.c
@@ -133,6 +133,7 @@
 #define PUMA_PMC_FUNC_DIS_0   0x34
 #define PUMA_PMC_FUNC_DIS_1   0x38
 #define PUMA_PMC_MEM_READ_OPCODE  0x00
+#define PUMA_PMC_MEM_WRITE_OPCODE 0x01
 #define PUMA_PMC_VUART4       0x0FC
 #define PUMA_PMC_RESET_INFO   0x0E8
 #define PUMA_PMC_RESET_CAUSE_MASK   0x7F000000
@@ -1388,14 +1389,23 @@ static int puma_acpi_add(struct acpi_device *acpi_dev)
    } else {
       data->reset_cause = (reset_info2 & PUMA_PMC_RESET_CAUSE_MASK) >> PUMA_PMC_RESET_CAUSE_SHIFT;
       data->reset_type = (reset_info2 & PUMA_PMC_RESET_TYPE_MASK) >> PUMA_PMC_RESET_TYPE_SHIFT;
-      data->reset_btn_dur = reset_info1 & PUMA_PMC_RESET_BTN_DUR_MASK;
+		data->reset_btn_dur = reset_info2 & PUMA_PMC_RESET_BTN_DUR_MASK;
       /* send IPC to clear the reset info */
       if ((ret = puma_acpi_pmc_ipc(PUMA_WRITE_PMC_IPC, PUMA_CLEAR_RESET_INFO, &reset_info1)) != 0) {
          pr_err("puma_acpi_pmc_ipc PUMA_CLEAR_RESET_INFO failed\n");
          goto puma_acpi_add_error;
-      }      
+		}
+		/* clear the reset duration in VUART4 */
+		reset_info2 &= ~PUMA_PMC_RESET_BTN_DUR_MASK;
+		ret = iosf_mbi_write(PUMA_PMC_PORT_ID,
+					PUMA_PMC_MEM_WRITE_OPCODE,
+					PUMA_PMC_VUART4, reset_info2);
+		if (ret < 0) {
+			pr_err("iosf mbi wr failed %d at %d!\n", ret, __LINE__);
+			goto puma_acpi_add_error;
+		}
    }
-   
+
    init_waitqueue_head(&puma_wait);
    init_timer(&data->timer);
    data->timer_state = PUMA_ACPI_TIMER_NOT_STARTED;
-- 
2.10.1

