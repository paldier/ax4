From b4d48f334c48c85adbfbacbf4738e4f3f257c646 Mon Sep 17 00:00:00 2001
From: Artur Saygin <artur.saygin@intel.com>
Date: Mon, 26 Sep 2016 10:19:23 -0700
Subject: [PATCH 483/639] netss: expose satt interface

---
 arch/x86/NetIP_SubSystem/netip_subsystem_config.c | 98 +++++++++++++++++++++++
 1 file changed, 98 insertions(+)

diff --git a/arch/x86/NetIP_SubSystem/netip_subsystem_config.c b/arch/x86/NetIP_SubSystem/netip_subsystem_config.c
index 7bb8a90..1557f3b 100644
--- a/arch/x86/NetIP_SubSystem/netip_subsystem_config.c
+++ b/arch/x86/NetIP_SubSystem/netip_subsystem_config.c
@@ -166,3 +166,101 @@ void netss_enable_snooped_mode(void)
     pr_info("netip snooped mode enabled!\n");
 }
 
+extern struct net_subsystem_drv_data *pnetss_drv_data;
+
+/* SATT configuration*/
+#define SATT_HOST_INDEX_MIN            (5)
+#define SATT_HOST_INDEX_MAX            (8)
+
+#define SATT_BASE_OFF                  (0x1000)
+#define SATT_SAP_SIZE_MAX              (32 << 21)
+#define SATT_N_ENTRY_OFF               (0x20)
+
+#define SATT2_CTRL_BRG_BA_MSB_SHIFT    (8)
+#define SATT2_CTRL_BRG_BA_MSB_MASK     (0xF)
+
+/* target field in SATT_N ctrl register, shift, mask and val */
+#define SATT_NTARGET_IOSF_PRIMARY_VAL  (0x4)
+#define SATT_N_CTRL_TARGET_SHIFT       (0x1)
+#define SATT_N_CTRL_TARGET_MASK                (0x7)
+
+/* SATT_N register offsets */
+#define SATT_N_CTRL_OFF                        (0x0)
+#define SATT_N_SAP_BA_OFF              (0x4)
+#define SATT_N_SAP_SIZE_OFF            (0x8)
+#define SATT_N_BRG_BA_OFF              (0xC)
+
+/* SATT_N register addresses */
+#define SATT_N_BASE(idx)               (SATT_BASE_OFF + ((idx) * SATT_N_ENTRY_OFF))
+#define SATT_N_CTRL(idx)               (SATT_N_BASE(idx) + SATT_N_CTRL_OFF)
+#define SATT_N_SAP_BA(idx)             (SATT_N_BASE(idx) + SATT_N_SAP_BA_OFF)
+#define SATT_N_SAP_SIZE(idx)           (SATT_N_BASE(idx) + SATT_N_SAP_SIZE_OFF)
+#define SATT_N_BRG_BA(idx)             (SATT_N_BASE(idx) + SATT_N_BRG_BA_OFF)
+
+void netss_sattn_reg_write(unsigned long off, uint32_t val)
+{
+       __raw_writel(val, pnetss_drv_data->bridge_reg_base + off);
+}
+
+uint32_t netss_sattn_reg_read(unsigned long off)
+{
+       return __raw_readl(pnetss_drv_data->bridge_reg_base + off);
+}
+
+int netss_sattn_iosf_prim_set(int idx, phys_addr_t brg_ba,
+                             uint32_t sap_size)
+{
+       uint32_t lo32 = lower_32_bits(brg_ba);
+       uint32_t hi32 = upper_32_bits(brg_ba);
+       uint32_t ctrl;
+
+       if (!pnetss_drv_data->netss_driver_initialized)
+               return -EBUSY;
+
+       /* ATOM cpu controls 4 entries */
+       if ((idx < SATT_HOST_INDEX_MIN) || (idx > SATT_HOST_INDEX_MAX))
+               return -EINVAL;
+
+       /* SATT is limited to 36 Bits */
+       if (hi32 & ~0xF)
+               return -EINVAL;
+
+       /* SATT has to be 16Byte aligned */
+       if (lo32 & 0xF)
+               return -EINVAL;
+
+       /* SATT range has to be 4Bytes aligned */
+       if (sap_size & 0x3)
+               return -EINVAL;
+
+       /* SATT is limited to 32 MB range*/
+       if (sap_size > SATT_SAP_SIZE_MAX)
+               return -EINVAL;
+
+       ctrl = netss_sattn_reg_read(SATT_N_CTRL(idx));
+
+       ctrl &= ~(SATT2_CTRL_BRG_BA_MSB_MASK << SATT2_CTRL_BRG_BA_MSB_SHIFT);
+       ctrl |= hi32 << SATT2_CTRL_BRG_BA_MSB_SHIFT;
+
+       ctrl &= ~(SATT_N_CTRL_TARGET_MASK << SATT_N_CTRL_TARGET_SHIFT);
+       ctrl |= (SATT_NTARGET_IOSF_PRIMARY_VAL << SATT_N_CTRL_TARGET_SHIFT);
+
+       netss_sattn_reg_write(SATT_N_SAP_SIZE(idx), sap_size);
+       netss_sattn_reg_write(SATT_N_BRG_BA(idx), lo32);
+       netss_sattn_reg_write(SATT_N_CTRL(idx), ctrl);
+
+       return 0;
+}
+
+EXPORT_SYMBOL(netss_sattn_iosf_prim_set);
+
+void netss_sattn_get(int idx, uint32_t *ctrl, uint32_t *sap_ba,
+                   uint32_t *sap_size, uint32_t *brg_ba)
+{
+       *ctrl = netss_sattn_reg_read(SATT_N_CTRL(idx));
+       *sap_ba = netss_sattn_reg_read(SATT_N_SAP_BA(idx));
+       *sap_size = netss_sattn_reg_read(SATT_N_SAP_SIZE(idx));
+       *brg_ba = netss_sattn_reg_read(SATT_N_BRG_BA(idx));
+}
+EXPORT_SYMBOL(netss_sattn_get);
+
-- 
2.10.1

