From 44ca731edeb719d228bf6c4267edf0036ce6d104 Mon Sep 17 00:00:00 2001
From: "Michael L. Walker" <michael.l.walker@intel.com>
Date: Mon, 24 Apr 2017 11:28:50 -0700
Subject: [PATCH 634/639] Fix memory leak in TOE driver

Symptom: The PID slab grows over time proportional to how many sockets are
created
RootCause: TOE driver hooks take a reference to a PID without releasing the
reference
Resolution: Release the PID reference when done with it
---
 net/socket.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/net/socket.c b/net/socket.c
index 3df77e8..0e93412 100644
--- a/net/socket.c
+++ b/net/socket.c
@@ -361,6 +361,7 @@ struct file *sock_alloc_file(struct socket *sock, int flags, const char *dname)
 	struct qstr name = { .name = "" };
 	struct path path;
 	struct file *file;
+	struct pid *toe_pid;
 
 	if (dname) {
 		name.name = dname;
@@ -391,7 +392,9 @@ struct file *sock_alloc_file(struct socket *sock, int flags, const char *dname)
 	file->private_data = sock;
     if (sock->sk) {
         if (toe_acceleration_flag_set_hook) {
-            toe_acceleration_flag_set_hook(sock->sk, find_get_pid(task_pid_nr(current)), SOCKET_ALLOCATE);
+            toe_pid = find_get_pid(task_pid_nr(current));
+            toe_acceleration_flag_set_hook(sock->sk, toe_pid, SOCKET_ALLOCATE);
+            put_pid(toe_pid);
         }
     }
     return file;
@@ -592,9 +595,12 @@ const struct file_operations bad_sock_fops = {
 
 void sock_release(struct socket *sock)
 {
+    struct pid * toe_pid;
     if (sock->sk) {
         if (toe_acceleration_flag_set_hook) {
-            toe_acceleration_flag_set_hook(sock->sk, find_get_pid(task_pid_nr(current)), SOCKET_RELEASE);
+            toe_pid = find_get_pid(task_pid_nr(current));
+            toe_acceleration_flag_set_hook(sock->sk, toe_pid, SOCKET_RELEASE);
+            put_pid(toe_pid);
         }
     }
 	if (sock->ops) {
-- 
2.10.1

