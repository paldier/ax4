# HG changeset patch
# Parent c1cd37036a0d8e6fccb90d4add4206de05b947b1
# Backport macvlan priv flags from 3.13 kernel to make PPA auto learn on
# lower interface

Signed-off-by: Kumar, Punith <punith.kumar@intel.com>

diff --git a/drivers/net/macvlan.c b/drivers/net/macvlan.c
--- a/drivers/net/macvlan.c
+++ b/drivers/net/macvlan.c
@@ -828,6 +828,7 @@ int macvlan_common_newlink(struct net *s
 		eth_hw_addr_inherit(dev, lowerdev);
 	}
 
+	dev->priv_flags |= IFF_MACVLAN;
 	err = netdev_upper_dev_link(lowerdev, dev);
 	if (err)
 		goto destroy_port;
diff --git a/include/linux/if_macvlan.h b/include/linux/if_macvlan.h
--- a/include/linux/if_macvlan.h
+++ b/include/linux/if_macvlan.h
@@ -118,4 +118,21 @@ extern int macvlan_link_register(struct 
 extern netdev_tx_t macvlan_start_xmit(struct sk_buff *skb,
 				      struct net_device *dev);
 
+#if IS_ENABLED(CONFIG_MACVLAN)
+	static inline struct net_device *
+macvlan_dev_real_dev(const struct net_device *dev)
+{
+	struct macvlan_dev *macvlan = netdev_priv(dev);
+
+	return macvlan->lowerdev;
+}
+#else
+	static inline struct net_device *
+macvlan_dev_real_dev(const struct net_device *dev)
+{
+	BUG();
+	return NULL;
+}
+#endif
+
 #endif /* _LINUX_IF_MACVLAN_H */
diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -3002,6 +3002,11 @@ static inline void skb_gso_error_unwind(
 	skb->mac_len = mac_len;
 }
 
+static inline bool netif_is_macvlan(struct net_device *dev)
+{
+	return dev->priv_flags & IFF_MACVLAN;
+}
+
 static inline bool netif_is_bond_master(struct net_device *dev)
 {
 	return dev->flags & IFF_MASTER && dev->priv_flags & IFF_BONDING;
diff --git a/include/uapi/linux/if.h b/include/uapi/linux/if.h
--- a/include/uapi/linux/if.h
+++ b/include/uapi/linux/if.h
@@ -84,7 +84,8 @@
 #define IFF_SUPP_NOFCS	0x80000		/* device supports sending custom FCS */
 #define IFF_LIVE_ADDR_CHANGE 0x100000	/* device supports hardware address
 					 * change when it's running */
-#define IFF_NO_IP_ALIGN	0x200000	/* do not ip-align allocated rx pkts */
+#define IFF_MACVLAN		0x200000	/* Macvlan device */
+#define IFF_NO_IP_ALIGN	0x400000	/* do not ip-align allocated rx pkts */
 
 
 #define IF_GET_IFACE	0x0001		/* for querying only */
